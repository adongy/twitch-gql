{
  "data": {
    "__schema": {
      "types": [
        {
          "name": "AcceptFriendRequestInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "AcceptFriendRequestPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "AcceptProgramAgreementError",
          "kind": "ENUM",
          "description": "Enumerates possible errors when accepting a program agreement.",
          "fields": null
        },
        {
          "name": "AcceptProgramAgreementInput",
          "kind": "INPUT_OBJECT",
          "description": "AcceptProgramAgreementInput is the input required when accepting a program agreement.",
          "fields": null
        },
        {
          "name": "AcceptProgramAgreementPayload",
          "kind": "OBJECT",
          "description": "AcceptProgramAgreementPayload is the payload returned after accepting a program agreement.",
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "workflow"
            }
          ]
        },
        {
          "name": "AccountConnectionSet",
          "kind": "OBJECT",
          "description": "The information about all of a user's connected accounts.",
          "fields": [
            {
              "name": "blizzard"
            },
            {
              "name": "facebook"
            },
            {
              "name": "steam"
            },
            {
              "name": "twitter"
            },
            {
              "name": "youtube"
            }
          ]
        },
        {
          "name": "AccountConnectionStatus",
          "kind": "OBJECT",
          "description": "The information about the connection status of a particular service.",
          "fields": [
            {
              "name": "hasConnection"
            }
          ]
        },
        {
          "name": "ActivateExtensionInput",
          "kind": "INPUT_OBJECT",
          "description": "The input to be provided to the activateExtension mutation.",
          "fields": null
        },
        {
          "name": "ActivateExtensionPayload",
          "kind": "OBJECT",
          "description": "The result of an activateExtension mutation.",
          "fields": [
            {
              "name": "installedExtensions"
            },
            {
              "name": "redirectURI"
            },
            {
              "name": "requiredAction"
            }
          ]
        },
        {
          "name": "ActivationState",
          "kind": "ENUM",
          "description": "ActivationState contains possible activation states found in the ActivationConfig.",
          "fields": null
        },
        {
          "name": "Activity",
          "kind": "INTERFACE",
          "description": "An action (and metadata about the action) which a user or session is performing.",
          "fields": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "ActivityInput",
          "kind": "INPUT_OBJECT",
          "description": "ActivityInput represents what the user is doing right now.\n\nIf type is WATCHING, userID must be supplied.\n\nIf type is PLAYING, gameID must be supplied.",
          "fields": null
        },
        {
          "name": "ActivityType",
          "kind": "ENUM",
          "description": "The categories of activities which users can engage in.",
          "fields": null
        },
        {
          "name": "AddBrowserPushSubscriptionInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "AddBrowserPushSubscriptionPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "browserPushSubscriptionID"
            }
          ]
        },
        {
          "name": "AddChannelBlockedTermError",
          "kind": "ENUM",
          "description": "Possible errors that this resolver returns.",
          "fields": null
        },
        {
          "name": "AddChannelBlockedTermInput",
          "kind": "INPUT_OBJECT",
          "description": "AddChannelBlockedTermInput takes in the channel, phrases, and if the term should be editable by mods.",
          "fields": null
        },
        {
          "name": "AddChannelBlockedTermPayload",
          "kind": "OBJECT",
          "description": "The returned data from the mutation.",
          "fields": [
            {
              "name": "addedAt"
            },
            {
              "name": "error"
            },
            {
              "name": "phrases"
            }
          ]
        },
        {
          "name": "AddChannelPermittedTermError",
          "kind": "ENUM",
          "description": "Possible errors that this resolver returns.",
          "fields": null
        },
        {
          "name": "AddChannelPermittedTermInput",
          "kind": "INPUT_OBJECT",
          "description": "AddChannelPermittedTermInput takes in the channel, phrases, and if the term should be editable by mods.",
          "fields": null
        },
        {
          "name": "AddChannelPermittedTermPayload",
          "kind": "OBJECT",
          "description": "The returned payload from the mutation.",
          "fields": [
            {
              "name": "addedAt"
            },
            {
              "name": "error"
            },
            {
              "name": "phrases"
            }
          ]
        },
        {
          "name": "AddCollectionItemInput",
          "kind": "INPUT_OBJECT",
          "description": "AddCollectionItemInput accepts a collectionID and item ID and parameters to add the item to a collection.",
          "fields": null
        },
        {
          "name": "AddCollectionItemPayload",
          "kind": "OBJECT",
          "description": "The response from adding an item to a collection.",
          "fields": [
            {
              "name": "collection"
            }
          ]
        },
        {
          "name": "AddReactionInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "AddReactionPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "content"
            }
          ]
        },
        {
          "name": "AllowRejectedChatMessageInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "AllowRejectedChatMessagePayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "AmazonMarketplace",
          "kind": "OBJECT",
          "description": "AmazonMarketplace represents the Amazon specific term for \"marketplace\", \nlike www.amazon.com or www.amazon.fr, that a user is active in.",
          "fields": [
            {
              "name": "displayText"
            },
            {
              "name": "id"
            },
            {
              "name": "orderHistoryRedirectURL"
            }
          ]
        },
        {
          "name": "ApplyExtensionActivationsInput",
          "kind": "INPUT_OBJECT",
          "description": "A mapping of extension type to list of activation configs.",
          "fields": null
        },
        {
          "name": "ApplyExtensionActivationsPayload",
          "kind": "OBJECT",
          "description": "A list of all installed extensions on the channel after an applyExtensionActivations mutation.",
          "fields": [
            {
              "name": "installedExtensions"
            }
          ]
        },
        {
          "name": "AssociatesStore",
          "kind": "OBJECT",
          "description": "Information regarding an Amazon Associates store.",
          "fields": [
            {
              "name": "ID"
            },
            {
              "name": "isPayoutEnabled"
            },
            {
              "name": "storeID"
            }
          ]
        },
        {
          "name": "AutoModProperties",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "aggressiveLevel"
            },
            {
              "name": "identityLevel"
            },
            {
              "name": "profanityLevel"
            },
            {
              "name": "sexualLevel"
            }
          ]
        },
        {
          "name": "AutohostChannelConnection",
          "kind": "OBJECT",
          "description": "A list of configured autohost channels\n\nA relay connection type that does not yet support pagination.",
          "fields": [
            {
              "name": "nodes"
            }
          ]
        },
        {
          "name": "AutohostSettings",
          "kind": "OBJECT",
          "description": "A user's autohosting settings.",
          "fields": [
            {
              "name": "deprioritizeVodcast"
            },
            {
              "name": "enabled"
            },
            {
              "name": "incomingRaidsPolicy"
            },
            {
              "name": "recommendedHost"
            },
            {
              "name": "strategy"
            },
            {
              "name": "teamHost"
            }
          ]
        },
        {
          "name": "AutohostSettingsIncomingRaidsPolicy",
          "kind": "ENUM",
          "description": "Determines what other channels can raid this channel.",
          "fields": null
        },
        {
          "name": "AutohostSettingsStrategy",
          "kind": "ENUM",
          "description": "The strategy to use when choosing channels to autohost.",
          "fields": null
        },
        {
          "name": "Availability",
          "kind": "ENUM",
          "description": "The possible computed states for a user or session.",
          "fields": null
        },
        {
          "name": "AvailabilityInput",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "Badge",
          "kind": "OBJECT",
          "description": "Communicates a user's status in chat.",
          "fields": [
            {
              "name": "clickAction"
            },
            {
              "name": "clickURL"
            },
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "setID"
            },
            {
              "name": "title"
            },
            {
              "name": "user"
            },
            {
              "name": "version"
            }
          ]
        },
        {
          "name": "BadgeClickAction",
          "kind": "ENUM",
          "description": "Enumerates possible badge click actions.",
          "fields": null
        },
        {
          "name": "BadgeDomain",
          "kind": "ENUM",
          "description": "Domains that badges belong to.",
          "fields": null
        },
        {
          "name": "BadgeImageSize",
          "kind": "ENUM",
          "description": "Enumerates valid badge image sizes.",
          "fields": null
        },
        {
          "name": "BadgePurchaseToken",
          "kind": "OBJECT",
          "description": "BadgePurchaseToken provides information related to a consumable purchase\ntoken about recently acquired badges.",
          "fields": [
            {
              "name": "badge"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "BanUserFromChatRoomError",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "code"
            },
            {
              "name": "maxTimeoutDurationSeconds"
            },
            {
              "name": "minTimeoutDurationSeconds"
            }
          ]
        },
        {
          "name": "BanUserFromChatRoomErrorCode",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "BanUserFromChatRoomInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "BanUserFromChatRoomPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "ban"
            },
            {
              "name": "error"
            }
          ]
        },
        {
          "name": "BanUserFromCommunityError",
          "kind": "ENUM",
          "description": "BanUserFromCommunityError is the error code while banning a user from a community.\nNOTE: Should have been named BanUserFromCommunityErrorCode.",
          "fields": null
        },
        {
          "name": "BanUserFromCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "BanUserFromCommunityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "community"
            },
            {
              "name": "error"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "BanVideoCommenterInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "BanVideoCommenterPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "BitsAdOffer",
          "kind": "OBJECT",
          "description": "BitsAdOffer is an offer to earn bits by watching an ad or interacting with an engagement.",
          "fields": [
            {
              "name": "bits"
            },
            {
              "name": "id"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "BitsBadgeTier",
          "kind": "OBJECT",
          "description": "Bits Badges with their associated settings.",
          "fields": [
            {
              "name": "badge"
            },
            {
              "name": "isEnabled"
            },
            {
              "name": "threshold"
            }
          ]
        },
        {
          "name": "BitsBundleOffer",
          "kind": "OBJECT",
          "description": "BitsBundleOffer is an offer to purchase a number of bits for a certain price.",
          "fields": [
            {
              "name": "asin"
            },
            {
              "name": "bits"
            },
            {
              "name": "discount"
            },
            {
              "name": "id"
            },
            {
              "name": "includesVAT"
            },
            {
              "name": "isPromo"
            },
            {
              "name": "price"
            },
            {
              "name": "promotion"
            },
            {
              "name": "type"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "BitsHashtagConnection",
          "kind": "OBJECT",
          "description": "A list of hashtags to use in chat while using bits.",
          "fields": [
            {
              "name": "edges"
            }
          ]
        },
        {
          "name": "BitsHashtagEdge",
          "kind": "OBJECT",
          "description": "BitsHashtagEdge contains.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "BitsHashtagEntry",
          "kind": "OBJECT",
          "description": "BitsHashtagEntry contains information about a hashtag, sucn as the description and image URL for display.",
          "fields": [
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            }
          ]
        },
        {
          "name": "BitsLeaderboard",
          "kind": "OBJECT",
          "description": "BitsLeaderboard contains the leaderboard for a specified channel.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "items"
            },
            {
              "name": "secondsRemaining"
            }
          ]
        },
        {
          "name": "BitsLeaderboardConnection",
          "kind": "OBJECT",
          "description": "Bits leaderboard connection is used to show the various leaderboard entries.",
          "fields": [
            {
              "name": "edges"
            }
          ]
        },
        {
          "name": "BitsLeaderboardEdge",
          "kind": "OBJECT",
          "description": "BitsLeaderboardEdge describes an edge in a bits leaderboard.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "BitsLeaderboardEntry",
          "kind": "OBJECT",
          "description": "Leaderboard entry at a specific node in a leaderboard connection.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "rank"
            },
            {
              "name": "score"
            }
          ]
        },
        {
          "name": "BitsLeaderboardItem",
          "kind": "OBJECT",
          "description": "Leaderboard item at a specific node in a leaderboard connection.",
          "fields": [
            {
              "name": "entryKey"
            },
            {
              "name": "id"
            },
            {
              "name": "rank"
            },
            {
              "name": "score"
            }
          ]
        },
        {
          "name": "BitsLeaderboardItemConnection",
          "kind": "OBJECT",
          "description": "Bits leaderboard connection is used to show the various leaderboard items.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "BitsLeaderboardItemEdge",
          "kind": "OBJECT",
          "description": "BitsLeaderboardItemEdge describes an edge in a bits leaderboard.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "BitsLeaderboardSettings",
          "kind": "OBJECT",
          "description": "BitsLeaderboardSettings are channel-specific settings related to Bits Leaderboards.",
          "fields": [
            {
              "name": "isEnabled"
            },
            {
              "name": "timePeriodType"
            }
          ]
        },
        {
          "name": "BitsOffer",
          "kind": "INTERFACE",
          "description": "BitsOffer is a way to obtain more bits.",
          "fields": [
            {
              "name": "bits"
            },
            {
              "name": "id"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "BitsOfferType",
          "kind": "ENUM",
          "description": "BitsOfferType is the kind of offer.",
          "fields": null
        },
        {
          "name": "BitsPromotion",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "BitsPurchaseToken",
          "kind": "OBJECT",
          "description": "BitsPurchaseToken provides information related to a consumable purchase \ntoken about recently acquired bits.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "quantity"
            }
          ]
        },
        {
          "name": "BlizzardAccountConnectionStatus",
          "kind": "OBJECT",
          "description": "The information about the connection status of a blizzard service.",
          "fields": [
            {
              "name": "battleTag"
            },
            {
              "name": "hasConnection"
            }
          ]
        },
        {
          "name": "BlizzardUser",
          "kind": "OBJECT",
          "description": "Information regarding a Blizzard account that is linked to Twitch.",
          "fields": [
            {
              "name": "battleTag"
            },
            {
              "name": "id"
            },
            {
              "name": "region"
            }
          ]
        },
        {
          "name": "BlockContext",
          "kind": "ENUM",
          "description": "Location from where the current user blocked target user.\nNOTE: it is onlyl used from the block_user mutation, this enum should have been named BlockUserContext and be placed in the same mutation file.",
          "fields": null
        },
        {
          "name": "BlockUserInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "BlockUserPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "targetUser"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "SCALAR",
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "fields": null
        },
        {
          "name": "Bounty",
          "kind": "OBJECT",
          "description": "A bounty is a task that a user can complete for a payout.",
          "fields": [
            {
              "name": "campaign"
            },
            {
              "name": "endAt"
            },
            {
              "name": "id"
            },
            {
              "name": "lastModifiedAt"
            },
            {
              "name": "payoutCents"
            },
            {
              "name": "restriction"
            },
            {
              "name": "startAt"
            },
            {
              "name": "status"
            }
          ]
        },
        {
          "name": "BountyBoardSettings",
          "kind": "OBJECT",
          "description": "Bounty board settings configure how a user can interact with the Bounty Boards feature.",
          "fields": [
            {
              "name": "isEnabled"
            }
          ]
        },
        {
          "name": "BountyCampaign",
          "kind": "OBJECT",
          "description": "A campaign defines the requirements and parameters for a set of bounties.",
          "fields": [
            {
              "name": "bountyLengthDays"
            },
            {
              "name": "details"
            },
            {
              "name": "endAt"
            },
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "sponsor"
            },
            {
              "name": "startAt"
            },
            {
              "name": "termsAndConditionsURL"
            },
            {
              "name": "title"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "BountyCampaignType",
          "kind": "ENUM",
          "description": "Represents the type of the campaign.",
          "fields": null
        },
        {
          "name": "BountyRestriction",
          "kind": "OBJECT",
          "description": "Defines the restrictions that are placed on a bounty.",
          "fields": [
            {
              "name": "days"
            },
            {
              "name": "endTime"
            },
            {
              "name": "startTime"
            }
          ]
        },
        {
          "name": "BountyStatus",
          "kind": "ENUM",
          "description": "Represents all the possible bounty statuses.",
          "fields": null
        },
        {
          "name": "Broadcast",
          "kind": "OBJECT",
          "description": "A historical representation of a live stream.",
          "fields": [
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "startedAt"
            },
            {
              "name": "title"
            }
          ]
        },
        {
          "name": "BroadcastSettings",
          "kind": "OBJECT",
          "description": "Settings for a User's broadcast that persist between streams.",
          "fields": [
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "isMature"
            },
            {
              "name": "language"
            },
            {
              "name": "title"
            }
          ]
        },
        {
          "name": "BroadcastType",
          "kind": "ENUM",
          "description": "Describes from which source the video originated.\nNOTE: Should have been named VideoBroadcastType.",
          "fields": null
        },
        {
          "name": "CancelBountyError",
          "kind": "OBJECT",
          "description": "Error code for an error that occurs while canceling the bounty.",
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "CancelBountyErrorCode",
          "kind": "ENUM",
          "description": "Error types recognized.",
          "fields": null
        },
        {
          "name": "CancelBountyInput",
          "kind": "INPUT_OBJECT",
          "description": "CancelBountyInput includes the bounty a user is trying to cancel.",
          "fields": null
        },
        {
          "name": "CancelBountyPayload",
          "kind": "OBJECT",
          "description": "Data that was mutated after canceling the bounty.",
          "fields": [
            {
              "name": "bounty"
            },
            {
              "name": "error"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "CancelFriendRequestInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "CancelFriendRequestPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "CancelPayoutOnboardingWorkflowInput",
          "kind": "INPUT_OBJECT",
          "description": "CancelPayoutOnboardingWorkflowInput returns the required input when starting a new workflow for payout onboarding.",
          "fields": null
        },
        {
          "name": "CancelPayoutOnboardingWorkflowPayload",
          "kind": "OBJECT",
          "description": "CancelPayoutOnboardingWorkflowPayload is the payload returned after canceling a payout onboarding workflow.",
          "fields": [
            {
              "name": "workflow"
            }
          ]
        },
        {
          "name": "Channel",
          "kind": "OBJECT",
          "description": null,
          "fields": []
        },
        {
          "name": "ChannelBannedUser",
          "kind": "OBJECT",
          "description": "ChannelBannedUser is an object that defines metadata about a channel ban.",
          "fields": [
            {
              "name": "bannedAt"
            },
            {
              "name": "bannedUser"
            },
            {
              "name": "modUser"
            }
          ]
        },
        {
          "name": "ChannelBlockedTerm",
          "kind": "OBJECT",
          "description": "ChannelBlockedTerm is an object that defines things that automod should permit in a channel.",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "expiresAt"
            },
            {
              "name": "isModEditable"
            },
            {
              "name": "phrases"
            },
            {
              "name": "source"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "ChannelNotificationSetting",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "isEnabled"
            },
            {
              "name": "settingState"
            }
          ]
        },
        {
          "name": "ChannelNotificationSettings",
          "kind": "OBJECT",
          "description": "Data about notification settings for a follow relationship.",
          "fields": [
            {
              "name": "isEnabled"
            },
            {
              "name": "nodes"
            }
          ]
        },
        {
          "name": "ChannelPermittedTerm",
          "kind": "OBJECT",
          "description": "ChannelPermittedTerm is an object that defines things that automod should permit in a channel.",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "expiresAt"
            },
            {
              "name": "isModEditable"
            },
            {
              "name": "phrases"
            },
            {
              "name": "source"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "ChatMessage",
          "kind": "OBJECT",
          "description": "Cheer is a chat message that uses bits to include cheermotes.",
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "authorColor"
            },
            {
              "name": "authorName"
            },
            {
              "name": "badges"
            },
            {
              "name": "bitsUsed"
            },
            {
              "name": "body"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "ChatRoomBanStatus",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "bannedUser"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "expiresAt"
            },
            {
              "name": "isPermanent"
            },
            {
              "name": "moderator"
            },
            {
              "name": "roomOwner"
            }
          ]
        },
        {
          "name": "ChatSettings",
          "kind": "OBJECT",
          "description": "ChatSettings are settings and rules for chatting in a channel.",
          "fields": [
            {
              "name": "autoModLevel"
            },
            {
              "name": "blockLinks"
            },
            {
              "name": "chatDelayMs"
            },
            {
              "name": "isBroadcasterLanguageModeEnabled"
            },
            {
              "name": "isOptedOutOfGlobalBannedWordsList"
            },
            {
              "name": "requireVerifiedAccount"
            },
            {
              "name": "rules"
            }
          ]
        },
        {
          "name": "ChatTheme",
          "kind": "ENUM",
          "description": "ChatTheme is a client-side UI theme.\nIt can be used to provide different images based on the dominant background color they are designed to display on.",
          "fields": null
        },
        {
          "name": "CheerInfo",
          "kind": "OBJECT",
          "description": "CheerInfo is the channel-specific bits/cheer settings and current state.",
          "fields": [
            {
              "name": "availableBadges"
            },
            {
              "name": "emotes"
            },
            {
              "name": "hashtags"
            },
            {
              "name": "id"
            },
            {
              "name": "leaderboard"
            },
            {
              "name": "recent"
            },
            {
              "name": "recentTimeoutMs"
            },
            {
              "name": "settings"
            },
            {
              "name": "top"
            }
          ]
        },
        {
          "name": "CheerPartnerBadgeSettings",
          "kind": "OBJECT",
          "description": "Bits partner settings associated with the badges.",
          "fields": [
            {
              "name": "tiers"
            }
          ]
        },
        {
          "name": "CheerPartnerChatMessageSettings",
          "kind": "OBJECT",
          "description": "Bits partner settings associated with the chat message.",
          "fields": [
            {
              "name": "minBitsPerEmote"
            },
            {
              "name": "minBitsToCheer"
            }
          ]
        },
        {
          "name": "CheerPartnerCustomPrefixSettings",
          "kind": "OBJECT",
          "description": "Bits partner settings for custom cheermote prefix.",
          "fields": [
            {
              "name": "isEnabled"
            },
            {
              "name": "prefix"
            }
          ]
        },
        {
          "name": "CheerPartnerLeaderboardSettings",
          "kind": "OBJECT",
          "description": "Bits partner dashboard settings for the bits leaderboard.",
          "fields": [
            {
              "name": "isEnabled"
            },
            {
              "name": "timePeriod"
            }
          ]
        },
        {
          "name": "CheerPartnerRecentCheerSettings",
          "kind": "OBJECT",
          "description": "Bits partner settings associated with recent cheers.",
          "fields": [
            {
              "name": "canPin"
            },
            {
              "name": "minimumBits"
            },
            {
              "name": "timeoutMilliseconds"
            }
          ]
        },
        {
          "name": "CheerPartnerSettings",
          "kind": "OBJECT",
          "description": "Cheer settings, configured in their partner dashboard.",
          "fields": [
            {
              "name": "badges"
            },
            {
              "name": "chatMessage"
            },
            {
              "name": "customPrefix"
            },
            {
              "name": "id"
            },
            {
              "name": "isOnboarded"
            },
            {
              "name": "leaderboard"
            },
            {
              "name": "recentCheer"
            }
          ]
        },
        {
          "name": "CheerSettings",
          "kind": "OBJECT",
          "description": "CheerSettings are the channel-specific cheer settings.",
          "fields": [
            {
              "name": "cheerMinimumBits"
            },
            {
              "name": "emoteMinimumBits"
            },
            {
              "name": "event"
            },
            {
              "name": "id"
            },
            {
              "name": "isRecentEnabled"
            },
            {
              "name": "isTopEnabled"
            },
            {
              "name": "leaderboard"
            },
            {
              "name": "recentMinimumBits"
            },
            {
              "name": "recentTimeoutMs"
            }
          ]
        },
        {
          "name": "Cheermote",
          "kind": "OBJECT",
          "description": "Cheermote is the metadata about different variations of a single cheermote that can be use to cheer in this channel.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "prefix"
            },
            {
              "name": "tiers"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "CheermoteImage",
          "kind": "OBJECT",
          "description": "CheermoteImage is a single image variation of a `CheermoteTier`.",
          "fields": [
            {
              "name": "dpiScale"
            },
            {
              "name": "id"
            },
            {
              "name": "isAnimated"
            },
            {
              "name": "theme"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "CheermoteTier",
          "kind": "OBJECT",
          "description": "CheermoteTier has information about a single tier of a cheermote.",
          "fields": [
            {
              "name": "bits"
            },
            {
              "name": "canCheer"
            },
            {
              "name": "color"
            },
            {
              "name": "id"
            },
            {
              "name": "images"
            },
            {
              "name": "tierID"
            }
          ]
        },
        {
          "name": "CheermoteType",
          "kind": "ENUM",
          "description": "CheermoteType is the kind of cheermore (custom vs 1st- or 3rd-party global).",
          "fields": null
        },
        {
          "name": "ClaimAllRewardsInput",
          "kind": "INPUT_OBJECT",
          "description": "ClaimAllRewardsInput includes the domain that a user is trying to claim all rewards for.",
          "fields": null
        },
        {
          "name": "ClaimAllRewardsPayload",
          "kind": "OBJECT",
          "description": "ClaimAllRewardsPayload is the payload of rewards returned by ClaimAllRewards.",
          "fields": [
            {
              "name": "domain"
            },
            {
              "name": "rewards"
            }
          ]
        },
        {
          "name": "ClaimBountyError",
          "kind": "OBJECT",
          "description": "Error code for an error that occurs while claiming the bounty.",
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "ClaimBountyErrorCode",
          "kind": "ENUM",
          "description": "Error types recognized.",
          "fields": null
        },
        {
          "name": "ClaimBountyInput",
          "kind": "INPUT_OBJECT",
          "description": "ClaimBountyInput includes the bounty a user is trying to claim.",
          "fields": null
        },
        {
          "name": "ClaimBountyPayload",
          "kind": "OBJECT",
          "description": "Data that was mutated after claiming the bounty.",
          "fields": [
            {
              "name": "claimedBounty"
            },
            {
              "name": "error"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "ClaimMilestoneInput",
          "kind": "INPUT_OBJECT",
          "description": "ClaimMilestoneInput includes the milestoneID a user is trying to claim.",
          "fields": null
        },
        {
          "name": "ClaimMilestonePayload",
          "kind": "OBJECT",
          "description": "ClaimMilestonePayload is the payload of rewards returned by ClaimMilestone.",
          "fields": [
            {
              "name": "milestoneID"
            },
            {
              "name": "rewards"
            }
          ]
        },
        {
          "name": "ClaimPrimeOfferError",
          "kind": "OBJECT",
          "description": "Error code for an error that occurs while claiming prime offer.",
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "ClaimPrimeOfferErrorCode",
          "kind": "ENUM",
          "description": "Error types recognized.",
          "fields": null
        },
        {
          "name": "ClaimPrimeOfferInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "ClaimPrimeOfferPayload",
          "kind": "OBJECT",
          "description": "Data that was mutated after claiming the prime offer, in this case, the entitlement.",
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "self"
            }
          ]
        },
        {
          "name": "ClearUnreadFriendRequestsPayload",
          "kind": "OBJECT",
          "description": "ClearUnreadFriendRequestsPaylod is the payload returned by ClearUnreadFriendRequests.",
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "ClientAuthorization",
          "kind": "OBJECT",
          "description": "The authorization a user has provided to an OAuth client.",
          "fields": [
            {
              "name": "clientID"
            },
            {
              "name": "clientName"
            },
            {
              "name": "createdAt"
            }
          ]
        },
        {
          "name": "Clip",
          "kind": "OBJECT",
          "description": "A recorded, replayable part of a live broadcast.",
          "fields": [
            {
              "name": "broadcast"
            },
            {
              "name": "broadcaster"
            },
            {
              "name": "champBadge"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "creationState"
            },
            {
              "name": "curator"
            },
            {
              "name": "durationSeconds"
            },
            {
              "name": "embedURL"
            },
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "language"
            },
            {
              "name": "rawMedia"
            },
            {
              "name": "rawVideoQualities"
            },
            {
              "name": "reactions"
            },
            {
              "name": "relatedClips"
            },
            {
              "name": "slug"
            },
            {
              "name": "thumbnailURL"
            },
            {
              "name": "title"
            },
            {
              "name": "url"
            },
            {
              "name": "video"
            },
            {
              "name": "videoOffsetSeconds"
            },
            {
              "name": "videoQualities"
            },
            {
              "name": "viewCount"
            }
          ]
        },
        {
          "name": "ClipConnection",
          "kind": "OBJECT",
          "description": "A list of clips related to the subject.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "ClipCreationState",
          "kind": "ENUM",
          "description": "An enumeration on the different status strings returned by a clip status.",
          "fields": null
        },
        {
          "name": "ClipEdge",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ClipRawMedia",
          "kind": "OBJECT",
          "description": "ClipRawMedia describes metadata about the clip's raw media used in clip editing.",
          "fields": [
            {
              "name": "defaultClipInitialOffset"
            },
            {
              "name": "duration"
            },
            {
              "name": "filmStripFrames"
            },
            {
              "name": "filmStripSecondsPerFrame"
            },
            {
              "name": "frameHeight"
            },
            {
              "name": "frameWidth"
            },
            {
              "name": "spritesheetURL"
            },
            {
              "name": "status"
            },
            {
              "name": "videoURL"
            }
          ]
        },
        {
          "name": "ClipRelatedClips",
          "kind": "OBJECT",
          "description": "There are different algorithms that return a different set of related clips.\nThey only return up to 4 clips per list.",
          "fields": [
            {
              "name": "broadcaster"
            },
            {
              "name": "combined"
            },
            {
              "name": "curator"
            },
            {
              "name": "game"
            },
            {
              "name": "similar"
            },
            {
              "name": "top"
            }
          ]
        },
        {
          "name": "ClipSegmentInput",
          "kind": "INPUT_OBJECT",
          "description": "ClipSegmentInput represents a single segment of a clip.",
          "fields": null
        },
        {
          "name": "ClipVideoQuality",
          "kind": "OBJECT",
          "description": "ClipVideoQuality describes metadata about an available playback source for a clip.",
          "fields": [
            {
              "name": "frameRate"
            },
            {
              "name": "quality"
            },
            {
              "name": "sourceURL"
            }
          ]
        },
        {
          "name": "ClipsFilter",
          "kind": "ENUM",
          "description": "The set of methods to restrict clips results.",
          "fields": null
        },
        {
          "name": "ClipsPeriod",
          "kind": "ENUM",
          "description": "An enumeration on the different time frames to filter clips results based on\ncreation time.",
          "fields": null
        },
        {
          "name": "ClipsSort",
          "kind": "ENUM",
          "description": "An enumeration on the different sort orders of clips results.",
          "fields": null
        },
        {
          "name": "Collection",
          "kind": "OBJECT",
          "description": "Collection (a.k.a. Playlist) is a backend concept for a list of videos.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "items"
            },
            {
              "name": "lengthSeconds"
            },
            {
              "name": "owner"
            },
            {
              "name": "state"
            },
            {
              "name": "thumbnailURL"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "viewCount"
            }
          ]
        },
        {
          "name": "CollectionConnection",
          "kind": "OBJECT",
          "description": "A paginated list of videos, and its metadata.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "CollectionItem",
          "kind": "UNION",
          "description": "The types of objects that can be contained in a collection.",
          "fields": null
        },
        {
          "name": "CollectionItemEdge",
          "kind": "OBJECT",
          "description": "A page entry, that contains a collection item and a cursor to return\nfrom the query to allow pagination.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "CollectionOptions",
          "kind": "INPUT_OBJECT",
          "description": "A Collection input to set options to include all items in a collection.",
          "fields": null
        },
        {
          "name": "CollectionState",
          "kind": "ENUM",
          "description": "Represents the state of a collection.",
          "fields": null
        },
        {
          "name": "CollectionsConnection",
          "kind": "OBJECT",
          "description": "These two types allow clients to query for a LIST of COLLECTIONS\n(i.e. a two-dimensional array of videos).",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "CollectionsItemEdge",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "CollectionsOptions",
          "kind": "INPUT_OBJECT",
          "description": "A Collections Connection input to set options to include empty collections.",
          "fields": null
        },
        {
          "name": "CommerceAmendment",
          "kind": "OBJECT",
          "description": "A user amendment for Commerce initiatives.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "isSigned"
            }
          ]
        },
        {
          "name": "CommerceAmendmentType",
          "kind": "ENUM",
          "description": "Types of CommerceAmendments for UserTwitchConnection.",
          "fields": null
        },
        {
          "name": "Community",
          "kind": "OBJECT",
          "description": "A community is a social structure of Twitch users. Streamers may use them to\nreach viewers interested in a specific type of content, and viewers can use them\nto discover that content.",
          "fields": [
            {
              "name": "avatarURL"
            },
            {
              "name": "broadcastersCount"
            },
            {
              "name": "communityType"
            },
            {
              "name": "coverURL"
            },
            {
              "name": "description"
            },
            {
              "name": "directoryType"
            },
            {
              "name": "displayName"
            },
            {
              "name": "email"
            },
            {
              "name": "followersCount"
            },
            {
              "name": "id"
            },
            {
              "name": "language"
            },
            {
              "name": "name"
            },
            {
              "name": "owner"
            },
            {
              "name": "rules"
            },
            {
              "name": "self"
            },
            {
              "name": "streams"
            },
            {
              "name": "summary"
            },
            {
              "name": "viewersCount"
            }
          ]
        },
        {
          "name": "CommunityFollow",
          "kind": "OBJECT",
          "description": "Community that a User is following.",
          "fields": [
            {
              "name": "community"
            },
            {
              "name": "followedAt"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "CommunityImageFormat",
          "kind": "ENUM",
          "description": "CommunityImageFormat is the possible values for the compression format for an image.",
          "fields": null
        },
        {
          "name": "CommunityImageType",
          "kind": "ENUM",
          "description": "CommunityImageType is the list of possible uses that an image can have.",
          "fields": null
        },
        {
          "name": "CommunityPermissions",
          "kind": "OBJECT",
          "description": "Actions that a User is allowed to take in a given community.",
          "fields": [
            {
              "name": "banning"
            },
            {
              "name": "broadcasting"
            },
            {
              "name": "editing"
            },
            {
              "name": "timingOut"
            }
          ]
        },
        {
          "name": "CommunitySelfConnection",
          "kind": "OBJECT",
          "description": "Community data for the current user.",
          "fields": [
            {
              "name": "follow"
            },
            {
              "name": "permissions"
            }
          ]
        },
        {
          "name": "CommunityType",
          "kind": "ENUM",
          "description": "The set of types a Community can have.",
          "fields": null
        },
        {
          "name": "ComponentActivationInput",
          "kind": "INPUT_OBJECT",
          "description": "The required configuration to activate a component extension.",
          "fields": null
        },
        {
          "name": "ComponentView",
          "kind": "OBJECT",
          "description": "The view configuration of an extension if the component anchor is supported.",
          "fields": [
            {
              "name": "aspectHeight"
            },
            {
              "name": "aspectWidth"
            },
            {
              "name": "hasZoom"
            },
            {
              "name": "size"
            },
            {
              "name": "viewerURL"
            },
            {
              "name": "zoomPixels"
            }
          ]
        },
        {
          "name": "ConfigView",
          "kind": "OBJECT",
          "description": "ConfigView holds the view configuration of an extension if the config page is supported.",
          "fields": [
            {
              "name": "viewerURL"
            }
          ]
        },
        {
          "name": "CounterStrikeGlobalOffensive",
          "kind": "OBJECT",
          "description": "Contains CounterStrikeGlobalOffensive game specific information.",
          "fields": [
            {
              "name": "csMap"
            },
            {
              "name": "mapImageURL"
            },
            {
              "name": "mapName"
            },
            {
              "name": "skill"
            }
          ]
        },
        {
          "name": "Crate",
          "kind": "OBJECT",
          "description": "A crate which users can open to get Twitch loot.",
          "fields": [
            {
              "name": "iconType"
            },
            {
              "name": "iconURL"
            },
            {
              "name": "id"
            },
            {
              "name": "openURL"
            },
            {
              "name": "title"
            }
          ]
        },
        {
          "name": "CreateClipError",
          "kind": "OBJECT",
          "description": "CreateClipError is an error associated with the createClip mutation.",
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "CreateClipErrorCode",
          "kind": "ENUM",
          "description": "CreateClipErrorCode contains the possible errors that can occur when creating a clip.",
          "fields": null
        },
        {
          "name": "CreateClipInput",
          "kind": "INPUT_OBJECT",
          "description": "CreateClipInput creates a clip either from a broadcast or video. If both broadcastID\nand videoID are set, the broadcastID will be preferred.",
          "fields": null
        },
        {
          "name": "CreateClipPayload",
          "kind": "OBJECT",
          "description": "CreateClipPayload returns the created clip or any error that prevented the clip creation.",
          "fields": [
            {
              "name": "clip"
            },
            {
              "name": "error"
            }
          ]
        },
        {
          "name": "CreateCollectionInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs for creating a new collection.",
          "fields": null
        },
        {
          "name": "CreateCollectionPayload",
          "kind": "OBJECT",
          "description": "The response from creating a new collection.",
          "fields": [
            {
              "name": "collection"
            }
          ]
        },
        {
          "name": "CreateCommunityError",
          "kind": "ENUM",
          "description": "CreateCommunityError is a user error while creating a community.\nNOTE: Should have been named CreateCommunityErrorCode.",
          "fields": null
        },
        {
          "name": "CreateCommunityImageUploadURLInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "CreateCommunityImageUploadURLPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "community"
            },
            {
              "name": "uploadID"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "CreateCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": "CreateCommunityInput contains the description, name, rules, and summary for a new community.",
          "fields": null
        },
        {
          "name": "CreateCommunityPayload",
          "kind": "OBJECT",
          "description": "CreateCommunityPayload is the response from creating a community.",
          "fields": [
            {
              "name": "community"
            },
            {
              "name": "error"
            }
          ]
        },
        {
          "name": "CreateDropImageUploadURLErrorCode",
          "kind": "ENUM",
          "description": "Possible errors from CreateDropImageUploadURL.",
          "fields": null
        },
        {
          "name": "CreateDropImageUploadURLInput",
          "kind": "INPUT_OBJECT",
          "description": "Information needed to generate a URL to upload a drop image to.",
          "fields": null
        },
        {
          "name": "CreateDropImageUploadURLPayload",
          "kind": "OBJECT",
          "description": "Returned information about image upload including URL to upload the image to.",
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "uploadID"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "CreateFriendRequestInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "CreateFriendRequestPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "CreatePanelInput",
          "kind": "INPUT_OBJECT",
          "description": "CreatePanelInput contains a panel with created data\nThe schema here has arguments for both extension panels and default panels\neach panel needs a PanelType, and channelID it corresponds to,\nbut each panel does not need the other arguments\nextension panels can have a slotID\ndefault panels can have a title, image, link, and/or description.",
          "fields": null
        },
        {
          "name": "CreatePanelPayload",
          "kind": "OBJECT",
          "description": "CreatePanelPayload contains the panel data after the create succeeds.",
          "fields": [
            {
              "name": "panel"
            }
          ]
        },
        {
          "name": "CreatePostInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "CreatePostPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "post"
            },
            {
              "name": "tweet"
            },
            {
              "name": "tweetStatus"
            }
          ]
        },
        {
          "name": "CreateRoomError",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "code"
            },
            {
              "name": "maxAllowedRooms"
            },
            {
              "name": "maxLength"
            },
            {
              "name": "minLength"
            }
          ]
        },
        {
          "name": "CreateRoomErrorCode",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CreateRoomInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "CreateRoomPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "room"
            }
          ]
        },
        {
          "name": "CreateSegmentEventInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs to the createSegmentEvent mutation.",
          "fields": null
        },
        {
          "name": "CreateSegmentEventPayload",
          "kind": "OBJECT",
          "description": "Outputs from the createSegmentEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "CreateSingleEventInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs to the createSingleEvent mutation.",
          "fields": null
        },
        {
          "name": "CreateSingleEventPayload",
          "kind": "OBJECT",
          "description": "Outputs from the createSingleEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "CreateTimetableEventInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs to the createTimetableEvent mutation.",
          "fields": null
        },
        {
          "name": "CreateTimetableEventPayload",
          "kind": "OBJECT",
          "description": "Outputs from the createTimetableEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "CreateVideoCommentInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "CreateVideoCommentPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "comment"
            }
          ]
        },
        {
          "name": "CreateVideoHighlightInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "CreateVideoHighlightMetadata",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "CreateVideoHighlightPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "highlight"
            }
          ]
        },
        {
          "name": "Cursor",
          "kind": "SCALAR",
          "description": "An opaque identifier for a connection edge. Used for pagination.\n\nThis is part of the Relay Cursor Connections Specification:\nhttps://facebook.github.io/relay/graphql/connections.htm.",
          "fields": null
        },
        {
          "name": "DeactivateExtensionInput",
          "kind": "INPUT_OBJECT",
          "description": "The required input for a deactivateExtension mutation.",
          "fields": null
        },
        {
          "name": "DeactivateExtensionPayload",
          "kind": "OBJECT",
          "description": "The resulting payload after a deactivateExtension mutation.",
          "fields": [
            {
              "name": "installedExtension"
            }
          ]
        },
        {
          "name": "DefaultPanel",
          "kind": "OBJECT",
          "description": "DefaultPanel is the normal panel type that displays text and images.",
          "fields": [
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "linkURL"
            },
            {
              "name": "title"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "DeleteChannelBlockedTermError",
          "kind": "OBJECT",
          "description": "Errors that the mutation returns.",
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "DeleteChannelBlockedTermErrorCode",
          "kind": "ENUM",
          "description": "The errors returned from this mutation.",
          "fields": null
        },
        {
          "name": "DeleteChannelBlockedTermInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs for the mutation. channel ID and a list of phrases to be deleted.",
          "fields": null
        },
        {
          "name": "DeleteChannelBlockedTermPayload",
          "kind": "OBJECT",
          "description": "The returned payload from the mutation.",
          "fields": [
            {
              "name": "deletedAt"
            },
            {
              "name": "error"
            },
            {
              "name": "phrases"
            }
          ]
        },
        {
          "name": "DeleteChannelPermittedTermError",
          "kind": "OBJECT",
          "description": "The errors returned from this mutation.",
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "DeleteChannelPermittedTermErrorCode",
          "kind": "ENUM",
          "description": "The possible error types returned from this mutation.",
          "fields": null
        },
        {
          "name": "DeleteChannelPermittedTermInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs for the mutation. channel ID and a list of phrases to be deleted.",
          "fields": null
        },
        {
          "name": "DeleteChannelPermittedTermPayload",
          "kind": "OBJECT",
          "description": "Returned payload of the mutation.",
          "fields": [
            {
              "name": "deletedAt"
            },
            {
              "name": "error"
            },
            {
              "name": "phrases"
            }
          ]
        },
        {
          "name": "DeleteClipsInput",
          "kind": "INPUT_OBJECT",
          "description": "DeleteClipsInput accepts either a list of slugs, a video id, or a broadcast id\nto determine the clips to delete.",
          "fields": null
        },
        {
          "name": "DeleteClipsPayload",
          "kind": "OBJECT",
          "description": "DeleteClipsPayload returns the deleted clips. Only the slug and id can be accessed\nfrom the returned list of deleted clips.",
          "fields": [
            {
              "name": "clips"
            },
            {
              "name": "count"
            }
          ]
        },
        {
          "name": "DeleteCollectionInput",
          "kind": "INPUT_OBJECT",
          "description": "DeleteCollectionInput accepts a collection ID to delete a collection.",
          "fields": null
        },
        {
          "name": "DeleteCollectionPayload",
          "kind": "OBJECT",
          "description": "DeleteCollectionPayload resolves the deleted collection.",
          "fields": [
            {
              "name": "collection"
            }
          ]
        },
        {
          "name": "DeleteEventCollectionInput",
          "kind": "INPUT_OBJECT",
          "description": "Input for the delete_event_collection mutation.",
          "fields": null
        },
        {
          "name": "DeleteEventCollectionPayload",
          "kind": "OBJECT",
          "description": "Payload returned by the delete_event_collection mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "DeleteEventInput",
          "kind": "INPUT_OBJECT",
          "description": "Input for the delete_event mutation.",
          "fields": null
        },
        {
          "name": "DeleteEventLeafInput",
          "kind": "INPUT_OBJECT",
          "description": "Input for the delete_event_leaf mutation.",
          "fields": null
        },
        {
          "name": "DeleteEventLeafPayload",
          "kind": "OBJECT",
          "description": "Payload returned by the delete_event_leaf mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "DeleteEventPayload",
          "kind": "OBJECT",
          "description": "Payload returned by the delete_event mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "DeleteNotificationInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DeleteNotificationPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "notification"
            }
          ]
        },
        {
          "name": "DeletePanelInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DeletePanelPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "panel"
            }
          ]
        },
        {
          "name": "DeletePostInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DeletePostPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "post"
            }
          ]
        },
        {
          "name": "DeleteRoomInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DeleteRoomMessageInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DeleteRoomMessagePayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "DeleteRoomPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "room"
            }
          ]
        },
        {
          "name": "DeleteVideoCommentPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "comment"
            }
          ]
        },
        {
          "name": "DeleteVideoInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DeleteVideoPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "video"
            }
          ]
        },
        {
          "name": "DenyRejectedChatMessageInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DenyRejectedChatMessagePayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "DeprecatedEvent",
          "kind": "INTERFACE",
          "description": "Deprecated\n\nAn event represents a piece of scheduled content.  Events allow broadcasters to advertise their content\nbefore it happens.  All events:\n\n  * ... are routeable.  Each event has a URL that can be shared off-site.  The URL will usually resolve to a\n    landing page that has information on the event, and content that happened during the event.\n  * ... can be followed by Twitch users.  When a user follows an event, they get notifications on when the\n    event goes live.\n\nThe Event interface is the common set of fields that all events support.  There are several concrete Event types\nthat represent different kinds of scheduled content.  The kinds of content include one-off events, premieres,\ntournaments, conferences and panels, shows and episodes etc.\nThe concrete Event types include additional fields that are needed to describe their kind of content.\n\nNOTE: Clients should be resilient to new concrete types being added in the future.\n\nNOTE: Events have been designed here using polymorphic types.\nThis is a (mostly) untested design pattern for API types, and we are currently learning about its advantages\nand disadvantages.\nTeams are encouraged to avoid polymorphic types and design their types to use composition instead, if possible.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "owner"
            },
            {
              "name": "self"
            },
            {
              "name": "stats"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "DeprecatedEventConnection",
          "kind": "OBJECT",
          "description": "Paginated list of Events, where the relationship between the source type and the Event is\ngeneric enough that no information needs to be encoded on the edge.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "DeprecatedEventEdge",
          "kind": "OBJECT",
          "description": "Generic edge between some type and an Event, where there is no information that needs to\nto be encoded on the edge.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "Directory",
          "kind": "INTERFACE",
          "description": "A Directory is a container of content – Streams, Videos, and Clips – on Twitch.",
          "fields": [
            {
              "name": "avatarURL"
            },
            {
              "name": "broadcastersCount"
            },
            {
              "name": "coverURL"
            },
            {
              "name": "directoryType"
            },
            {
              "name": "displayName"
            },
            {
              "name": "followersCount"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "streams"
            },
            {
              "name": "viewersCount"
            }
          ]
        },
        {
          "name": "DirectoryConnection",
          "kind": "OBJECT",
          "description": "Paginated list of Directories.\nImplements the Relay cursor connections specification.\nSee: https://facebook.github.io/relay/graphql/connections.htm.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "DirectoryEdge",
          "kind": "OBJECT",
          "description": "Contains information about a Directory's relationship to a given page (connection),\nand the Directory itself.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "DirectoryFilter",
          "kind": "ENUM",
          "description": "The set of ways to filter directories.",
          "fields": null
        },
        {
          "name": "DirectorySort",
          "kind": "ENUM",
          "description": "The set of ways to sort directories against each other.",
          "fields": null
        },
        {
          "name": "DirectoryType",
          "kind": "ENUM",
          "description": "The set of types of directory.",
          "fields": null
        },
        {
          "name": "DiscountType",
          "kind": "ENUM",
          "description": "DEPRECATED: to be replaced by SubscriptionPromotionDiscountType.\nValid discount types for subscription products.",
          "fields": null
        },
        {
          "name": "DismissFriendRecommendationInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DismissFriendRecommendationPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "DismissPinnedCheerInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DismissPinnedCheerPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "DismissPurchaseTokenInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DismissPurchaseTokenPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "DismissRitualTokenError",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "DismissRitualTokenErrorCode",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "DismissRitualTokenInput",
          "kind": "INPUT_OBJECT",
          "description": "DismissRitualTokenInput is the input when dismissing a ritual token.",
          "fields": null
        },
        {
          "name": "DismissRitualTokenPayload",
          "kind": "OBJECT",
          "description": "DismissRitualTokenPayload is the response when dismissing a ritual token.",
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "Drop",
          "kind": "OBJECT",
          "description": "Contains all of the information about a Drop awarded to a user.",
          "fields": [
            {
              "name": "game"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "DropAward",
          "kind": "OBJECT",
          "description": "Data about the award of a drop to a user.",
          "fields": [
            {
              "name": "awardedAt"
            },
            {
              "name": "node"
            },
            {
              "name": "reason"
            }
          ]
        },
        {
          "name": "DropCampaign",
          "kind": "OBJECT",
          "description": "A campaign a developer is running to give drops away to viewers of their game\nTo be considered live, a campaign must be enabled with the current time\nbeing after the start but before the end times\nTo apply to a particular channel a campaign must be live and additionally\nthe channel must be playing an applicable game and either must be one of the\napplicable channels or the campaign must have an empty applicable channel list\n(where an empty list specifically means all channels are eligible).",
          "fields": [
            {
              "name": "applicableChannels"
            },
            {
              "name": "applicableGames"
            },
            {
              "name": "awardableDrops"
            },
            {
              "name": "connectionURL"
            },
            {
              "name": "endAt"
            },
            {
              "name": "id"
            },
            {
              "name": "isEnabled"
            },
            {
              "name": "startAt"
            }
          ]
        },
        {
          "name": "DropImageType",
          "kind": "ENUM",
          "description": "DropImageType is the list of possible uses that an image can have for drops.",
          "fields": null
        },
        {
          "name": "Duration",
          "kind": "SCALAR",
          "description": "A possibly signed sequence of decimal numbers, each with optional fraction\nand a unit suffix, such as \"300ms\", \"-1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
          "fields": null
        },
        {
          "name": "EditCommunityError",
          "kind": "ENUM",
          "description": "EditCommunityError is a user error while editing a community\nNOTE: Should have been named EditCommunityErrorCode.",
          "fields": null
        },
        {
          "name": "EditCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": "EditCommunityInput contains the ID of the community to be updated\nIt also must contain at least one of description, display name, rules, or summary.",
          "fields": null
        },
        {
          "name": "EditCommunityPayload",
          "kind": "OBJECT",
          "description": "EditCommunityPayload is the response from editing a community.",
          "fields": [
            {
              "name": "community"
            },
            {
              "name": "error"
            }
          ]
        },
        {
          "name": "EditRoomMessageInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "EditRoomMessagePayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "EmbeddedEmote",
          "kind": "OBJECT",
          "description": "EmbeddedEmote is an encoding format used to describe an emote embedded in a string of text.\n\nExample:\n  body = \"hey KappaHD\"\n  from = 4\n  to = 10\n\n  \"KappaHD\" will be replaced with the KappaHD emote image.",
          "fields": [
            {
              "name": "emoteID"
            },
            {
              "name": "from"
            },
            {
              "name": "id"
            },
            {
              "name": "setID"
            },
            {
              "name": "to"
            }
          ]
        },
        {
          "name": "Emote",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "setID"
            },
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "EmoteSet",
          "kind": "OBJECT",
          "description": "Represents a group of emotes.",
          "fields": [
            {
              "name": "emotes"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "EmoteSetDomain",
          "kind": "ENUM",
          "description": "Domains that emotes belong to.",
          "fields": null
        },
        {
          "name": "EmoteSetPurchaseToken",
          "kind": "OBJECT",
          "description": "EmoteSetPurchaseToken provides information related to a consumable purchase \ntoken about recently acquired emote sets.",
          "fields": [
            {
              "name": "emoteSet"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "Event",
          "kind": "UNION",
          "description": "An event represents a piece of scheduled content.  Events allow broadcasters to advertise their content\nbefore it happens.  All events:\n\n  * ... are routeable.  Each event has a URL that can be shared off-site.  The URL will usually resolve to a\n    landing page that has information on the event, and content that happened during the event.\n  * ... can be followed by Twitch users.  When a user follows an event, they get notifications on when the\n    event goes live.\n\nThere are currently two high-level categories of events.  EventLeaf, which is a single event that may or may\nnot be part of a collection, or an EventCollection that groups leaves together.",
          "fields": null
        },
        {
          "name": "EventBroadcast",
          "kind": "OBJECT",
          "description": "DEPRECATED: to be replaced by the Event interface.\nEventBroadcast is a projected or past planned stream with a fixed start/end time, game and channel.",
          "fields": [
            {
              "name": "coverImageURL"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "endAt"
            },
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "originalCoverImageURL"
            },
            {
              "name": "owner"
            },
            {
              "name": "self"
            },
            {
              "name": "startAt"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "videos"
            }
          ]
        },
        {
          "name": "EventBroadcastSelfConnection",
          "kind": "OBJECT",
          "description": "DEPRECATED: EventBroadcast is being replaced by the Event interface\nThe relationship between the authenticated user and an event broadcast.",
          "fields": [
            {
              "name": "emailEnabled"
            }
          ]
        },
        {
          "name": "EventCollection",
          "kind": "OBJECT",
          "description": "An event collection represents a group of event leaves.",
          "fields": [
            {
              "name": "channels"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "defaultTimeZone"
            },
            {
              "name": "description"
            },
            {
              "name": "endAt"
            },
            {
              "name": "games"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "isDeleted"
            },
            {
              "name": "language"
            },
            {
              "name": "leaves"
            },
            {
              "name": "managedLeaves"
            },
            {
              "name": "owner"
            },
            {
              "name": "self"
            },
            {
              "name": "startAt"
            },
            {
              "name": "stats"
            },
            {
              "name": "title"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "EventCollectionConnection",
          "kind": "OBJECT",
          "description": "Paginated list of event collections.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EventCollectionEdge",
          "kind": "OBJECT",
          "description": "Generic edge between some type and an EventCollection.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EventConnectionCriteriaInput",
          "kind": "INPUT_OBJECT",
          "description": "Generic options for filtering pages of events.",
          "fields": null
        },
        {
          "name": "EventConnectionFirstPageInput",
          "kind": "INPUT_OBJECT",
          "description": "Defines where the first page of a listing of events starts.\nEach field allows specifying a strategy to pick the first event on the first page.  Clients should\nonly set one of these fields to choose a strategy, and leave the others null.",
          "fields": null
        },
        {
          "name": "EventLeaf",
          "kind": "OBJECT",
          "description": "An event leaf represents a single event that may or may not be part of a collection.",
          "fields": [
            {
              "name": "channel"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "defaultTimeZone"
            },
            {
              "name": "description"
            },
            {
              "name": "endAt"
            },
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "isDeleted"
            },
            {
              "name": "language"
            },
            {
              "name": "owner"
            },
            {
              "name": "parent"
            },
            {
              "name": "premiere"
            },
            {
              "name": "self"
            },
            {
              "name": "startAt"
            },
            {
              "name": "stats"
            },
            {
              "name": "title"
            },
            {
              "name": "type"
            },
            {
              "name": "videos"
            }
          ]
        },
        {
          "name": "EventLeafConnection",
          "kind": "OBJECT",
          "description": "Paginated list of event leafs.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "EventLeafEdge",
          "kind": "OBJECT",
          "description": "Generic edge between some type and an EventLeaf.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "EventNotificationSetting",
          "kind": "OBJECT",
          "description": "Settings for a given event.",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "platforms"
            }
          ]
        },
        {
          "name": "EventSelfConnection",
          "kind": "OBJECT",
          "description": "EventSelfConnection contains information on the current authenticated user's interactions with an event.",
          "fields": [
            {
              "name": "isFollowing"
            }
          ]
        },
        {
          "name": "EventSortBy",
          "kind": "ENUM",
          "description": "Sort field for events.",
          "fields": null
        },
        {
          "name": "EventStats",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "followingCount"
            }
          ]
        },
        {
          "name": "EventType",
          "kind": "ENUM",
          "description": "Enumerates the different types of events.  Generally, clients should use branch on Leaf or Collection\nand implement different behavior based on the presence of various fields on the objects.  The type field\nshould only be used for labeling, and in the admin edit interface.",
          "fields": null
        },
        {
          "name": "EventTypeBroadcastType",
          "kind": "ENUM",
          "description": "Describes describes the source of a Video that covers an Event.",
          "fields": null
        },
        {
          "name": "EventVideoConnection",
          "kind": "OBJECT",
          "description": "A paginated list of Videos that cover an Event.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "EventVideoEdge",
          "kind": "OBJECT",
          "description": "Contains information on the Event's relationship with the Video, and the Video itself.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "offsetSeconds"
            },
            {
              "name": "startsAt"
            }
          ]
        },
        {
          "name": "Extension",
          "kind": "OBJECT",
          "description": "Twitch Extension.",
          "fields": [
            {
              "name": "anchor"
            },
            {
              "name": "assetURLs"
            },
            {
              "name": "authorName"
            },
            {
              "name": "clientID"
            },
            {
              "name": "description"
            },
            {
              "name": "hasIdentityLinking"
            },
            {
              "name": "iconURL"
            },
            {
              "name": "id"
            },
            {
              "name": "isBitsEnabled"
            },
            {
              "name": "name"
            },
            {
              "name": "privacyPolicyURL"
            },
            {
              "name": "requiredBroadcasterAbilities"
            },
            {
              "name": "screenshotURLs"
            },
            {
              "name": "self"
            },
            {
              "name": "sku"
            },
            {
              "name": "state"
            },
            {
              "name": "summary"
            },
            {
              "name": "supportEmail"
            },
            {
              "name": "termsURL"
            },
            {
              "name": "vendorCode"
            },
            {
              "name": "version"
            },
            {
              "name": "views"
            },
            {
              "name": "whitelistedConfigURLs"
            },
            {
              "name": "whitelistedPanelURLs"
            }
          ]
        },
        {
          "name": "ExtensionActivationConfig",
          "kind": "OBJECT",
          "description": "The current activation configuration for an installed extension.",
          "fields": [
            {
              "name": "anchor"
            },
            {
              "name": "slot"
            },
            {
              "name": "state"
            },
            {
              "name": "x"
            },
            {
              "name": "y"
            }
          ]
        },
        {
          "name": "ExtensionActivationInput",
          "kind": "INPUT_OBJECT",
          "description": "Represents the action which should be taken on the provided installation ID. If no\nanchor configuration is provided, the installation will be deactivated.",
          "fields": null
        },
        {
          "name": "ExtensionAnchor",
          "kind": "ENUM",
          "description": "The possible values for an Extension Anchor.",
          "fields": null
        },
        {
          "name": "ExtensionConnection",
          "kind": "OBJECT",
          "description": "A paginated list of extensions, and its metadata.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "ExtensionEdge",
          "kind": "OBJECT",
          "description": "An element in a paginated extensions of videos, and its metadata.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ExtensionInstallation",
          "kind": "OBJECT",
          "description": "Extension Installation are models which contain an Extension and it's associated installation metadata.",
          "fields": [
            {
              "name": "activationConfig"
            },
            {
              "name": "extension"
            },
            {
              "name": "id"
            },
            {
              "name": "requiredActions"
            },
            {
              "name": "self"
            }
          ]
        },
        {
          "name": "ExtensionInstallationSelfConnection",
          "kind": "OBJECT",
          "description": "The connection a user has to an Installed Extension.",
          "fields": [
            {
              "name": "canActivate"
            },
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "ExtensionPanel",
          "kind": "OBJECT",
          "description": "ExtensionPanel is a placeholder in the panel list for arbitrary iframed content.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "slotID"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "ExtensionRequiredAction",
          "kind": "OBJECT",
          "description": "The action a user must take to complete an activation of an extension installation.",
          "fields": [
            {
              "name": "redirectURI"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "ExtensionRequiredActionType",
          "kind": "ENUM",
          "description": "The possible types of required actions after attempting to activate an extension.",
          "fields": null
        },
        {
          "name": "ExtensionSelfConnection",
          "kind": "OBJECT",
          "description": "The connection a user has to an Extension object.",
          "fields": [
            {
              "name": "canInstall"
            }
          ]
        },
        {
          "name": "ExtensionState",
          "kind": "ENUM",
          "description": "The possible values for ExtensionState.",
          "fields": null
        },
        {
          "name": "ExtensionStateFilter",
          "kind": "ENUM",
          "description": "ExtensionStateFilter contains all the valid states to filter the list of extensions by.",
          "fields": null
        },
        {
          "name": "ExtensionToken",
          "kind": "OBJECT",
          "description": "The user-specific token for an installed extension on a channel.",
          "fields": [
            {
              "name": "jwt"
            }
          ]
        },
        {
          "name": "ExtensionView",
          "kind": "INTERFACE",
          "description": "ExtensionView is the interface which every anchor-specific extension view extends from.",
          "fields": [
            {
              "name": "viewerURL"
            }
          ]
        },
        {
          "name": "ExtensionViews",
          "kind": "OBJECT",
          "description": "The potential anchor-specific configurations and extension can have.",
          "fields": [
            {
              "name": "component"
            },
            {
              "name": "config"
            },
            {
              "name": "hidden"
            },
            {
              "name": "liveConfig"
            },
            {
              "name": "mobile"
            },
            {
              "name": "panel"
            },
            {
              "name": "videoOverlay"
            }
          ]
        },
        {
          "name": "FeatureFlags",
          "kind": "OBJECT",
          "description": null,
          "fields": []
        },
        {
          "name": "FeaturedContentSection",
          "kind": "OBJECT",
          "description": "FeaturedContentSections contain the a set of FeaturedItems that should be shown together in a particular section of Twitch apps.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "items"
            }
          ]
        },
        {
          "name": "FeaturedEventBroadcasts",
          "kind": "OBJECT",
          "description": "DEPRECATED: to be replaced by FeaturedEventsByTime.\nA collection of events that have been featured for this game.",
          "fields": [
            {
              "name": "future"
            },
            {
              "name": "live"
            },
            {
              "name": "past"
            }
          ]
        },
        {
          "name": "FeaturedEventsByTime",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "future"
            },
            {
              "name": "live"
            },
            {
              "name": "past"
            }
          ]
        },
        {
          "name": "FeaturedItem",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "isScheduled"
            },
            {
              "name": "isSponsored"
            },
            {
              "name": "priorityLevel"
            },
            {
              "name": "title"
            }
          ]
        },
        {
          "name": "FeaturedItemContent",
          "kind": "UNION",
          "description": null,
          "fields": null
        },
        {
          "name": "FeaturedStream",
          "kind": "OBJECT",
          "description": "FeaturedStream contains extra metadata for presenting a featured Stream.",
          "fields": [
            {
              "name": "broadcaster"
            },
            {
              "name": "description"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "isScheduled"
            },
            {
              "name": "isSponsored"
            },
            {
              "name": "priorityLevel"
            },
            {
              "name": "stream"
            },
            {
              "name": "title"
            }
          ]
        },
        {
          "name": "FeaturedVideo",
          "kind": "OBJECT",
          "description": "DEPRECATED: do not use, it is subject to change.\nFeaturedVideo contains extra metadata for presenting a featured video.",
          "fields": [
            {
              "name": "description"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "isScheduled"
            },
            {
              "name": "isSponsored"
            },
            {
              "name": "priorityLevel"
            },
            {
              "name": "title"
            },
            {
              "name": "video"
            }
          ]
        },
        {
          "name": "Feed",
          "kind": "OBJECT",
          "description": "Feed is twitch's pulse product of content a user may enjoy.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "items"
            }
          ]
        },
        {
          "name": "FeedConnection",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "FeedEdge",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "FeedEmbed",
          "kind": "UNION",
          "description": null,
          "fields": null
        },
        {
          "name": "FeedItem",
          "kind": "OBJECT",
          "description": "FeedItem is the units of a feed.\nThey do not have an identifier because you cannot look them up by identifier.",
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "reasons"
            },
            {
              "name": "tracking"
            }
          ]
        },
        {
          "name": "FeedItemConnection",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "FeedItemContent",
          "kind": "UNION",
          "description": "FeedItemContent is the supported content types that may appear in a feed.",
          "fields": null
        },
        {
          "name": "FeedItemEdge",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "FeedItemReason",
          "kind": "OBJECT",
          "description": "FeedItemReason explains why an item is in your feed.",
          "fields": [
            {
              "name": "reason"
            }
          ]
        },
        {
          "name": "FeedItemTracking",
          "kind": "OBJECT",
          "description": "FeedItemTracking contains the tracking info of a feeditem.",
          "fields": [
            {
              "name": "batchID"
            },
            {
              "name": "cardImpressionID"
            },
            {
              "name": "recGenerationID"
            },
            {
              "name": "recGenerationIndex"
            }
          ]
        },
        {
          "name": "Float",
          "kind": "SCALAR",
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
          "fields": null
        },
        {
          "name": "Follow",
          "kind": "OBJECT",
          "description": "Data about the relationship between one User and a User they are following.",
          "fields": [
            {
              "name": "disableNotifications"
            },
            {
              "name": "followedAt"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "FollowCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "FollowCommunityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "community"
            }
          ]
        },
        {
          "name": "FollowConnection",
          "kind": "OBJECT",
          "description": "A paginated list of follows relationships.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "FollowDeprecatedEventPayload",
          "kind": "OBJECT",
          "description": "The result of a followDeprecatedEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "FollowEdge",
          "kind": "OBJECT",
          "description": "An element in a paginated list of follows relationships.\nContains metadata about the follow relationship between two users.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "followedAt"
            },
            {
              "name": "node"
            },
            {
              "name": "notificationSettings"
            }
          ]
        },
        {
          "name": "FollowEventInput",
          "kind": "INPUT_OBJECT",
          "description": "The required input for a followEvent mutation.",
          "fields": null
        },
        {
          "name": "FollowEventPayload",
          "kind": "OBJECT",
          "description": "The result of a followEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "FollowGameInput",
          "kind": "INPUT_OBJECT",
          "description": "FollowGameInput contains just the game ID of the game to follow.",
          "fields": null
        },
        {
          "name": "FollowGamePayload",
          "kind": "OBJECT",
          "description": "FollowGamePayload is the response from following a game.",
          "fields": [
            {
              "name": "game"
            }
          ]
        },
        {
          "name": "FollowUserInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "FollowUserPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "follow"
            }
          ]
        },
        {
          "name": "FollowedCommunityConnection",
          "kind": "OBJECT",
          "description": "Paginated list of followed communities.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "FollowedCommunityEdge",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "FollowedGameConnection",
          "kind": "OBJECT",
          "description": "A list of followed games.",
          "fields": [
            {
              "name": "nodes"
            }
          ]
        },
        {
          "name": "FollowedGamesType",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "FollowedHostConnection",
          "kind": "OBJECT",
          "description": "A list of broadcasters followed by a user and hosting live broadcasters.",
          "fields": [
            {
              "name": "nodes"
            }
          ]
        },
        {
          "name": "FollowedLiveUserConnection",
          "kind": "OBJECT",
          "description": "A list of live-streaming broadcasters followed by a user.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "FollowedLiveUserEdge",
          "kind": "OBJECT",
          "description": "A live streaming broadcaster with cursor.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "FollowerConnection",
          "kind": "OBJECT",
          "description": "A paginated list of followers relationships.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "FollowerEdge",
          "kind": "OBJECT",
          "description": "An element in a paginated list of followers.\nContains metadata about the follower relationship between two users.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "disableNotifications"
            },
            {
              "name": "followedAt"
            },
            {
              "name": "node"
            },
            {
              "name": "notificationSettings"
            }
          ]
        },
        {
          "name": "FollowsFilter",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "FragmentContent",
          "kind": "UNION",
          "description": "FragmentContent contains the parse content of a fragment, and can be an emote or a mention.\nNOTE: should have been called RoomMessageFragmentContent.",
          "fields": null
        },
        {
          "name": "FriendConnection",
          "kind": "OBJECT",
          "description": "A list of a user's friend relationships.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "FriendEdge",
          "kind": "OBJECT",
          "description": "The friendship between the authenticated user and another user.",
          "fields": [
            {
              "name": "activity"
            },
            {
              "name": "availability"
            },
            {
              "name": "lastStatusChangeAt"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "FriendSort",
          "kind": "ENUM",
          "description": "Decides how to sort Friendship-related responses.",
          "fields": null
        },
        {
          "name": "FulfillmentDetail",
          "kind": "OBJECT",
          "description": "Information about how to acquire or launch a game.\nFor Commenrce.",
          "fields": [
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "isExternal"
            }
          ]
        },
        {
          "name": "Game",
          "kind": "OBJECT",
          "description": "A Game is often the subject of a Stream on Twitch.",
          "fields": [
            {
              "name": "activeDropCampaigns"
            },
            {
              "name": "avatarURL"
            },
            {
              "name": "boxArtURL"
            },
            {
              "name": "broadcastersCount"
            },
            {
              "name": "clips"
            },
            {
              "name": "coverURL"
            },
            {
              "name": "directoryType"
            },
            {
              "name": "displayName"
            },
            {
              "name": "featuredEventsByTime"
            },
            {
              "name": "followersCount"
            },
            {
              "name": "giantBombID"
            },
            {
              "name": "id"
            },
            {
              "name": "logoURL"
            },
            {
              "name": "name"
            },
            {
              "name": "popularityScore"
            },
            {
              "name": "product"
            },
            {
              "name": "self"
            },
            {
              "name": "streams"
            },
            {
              "name": "videos"
            },
            {
              "name": "viewersCount"
            }
          ]
        },
        {
          "name": "GameClipsInput",
          "kind": "INPUT_OBJECT",
          "description": "Filtering criteria for paginated game clips results.",
          "fields": null
        },
        {
          "name": "GameConnection",
          "kind": "OBJECT",
          "description": "Paginated list of Games.\nImplements the Relay cursor connections specification.\nSee: https://facebook.github.io/relay/graphql/connections.htm.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "GameEdge",
          "kind": "OBJECT",
          "description": "Contains information about a Game's relationship to a given page (connection),\nand the Game itself.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "GameFollow",
          "kind": "OBJECT",
          "description": "Game followed by a User.",
          "fields": [
            {
              "name": "followedAt"
            },
            {
              "name": "game"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "GameProduct",
          "kind": "OBJECT",
          "description": "Details about how to acquire and launch this game as well as available in-game content purchases.\nFor Commerce.",
          "fields": [
            {
              "name": "acquisition"
            },
            {
              "name": "developer"
            },
            {
              "name": "edition"
            },
            {
              "name": "esrbRating"
            },
            {
              "name": "eulaURL"
            },
            {
              "name": "featureDetails"
            },
            {
              "name": "genres"
            },
            {
              "name": "id"
            },
            {
              "name": "inGameContent"
            },
            {
              "name": "info"
            },
            {
              "name": "launchPlatform"
            },
            {
              "name": "media"
            },
            {
              "name": "minimumSystemRequirement"
            },
            {
              "name": "publisher"
            },
            {
              "name": "recommendedSystemRequirement"
            },
            {
              "name": "releaseEndDate"
            },
            {
              "name": "releaseStartDate"
            },
            {
              "name": "supportURL"
            },
            {
              "name": "supportedLanguages"
            },
            {
              "name": "supportedPlatforms"
            },
            {
              "name": "websiteURL"
            }
          ]
        },
        {
          "name": "GameSelfConnection",
          "kind": "OBJECT",
          "description": "The relationship between the authenticated user and a game.",
          "fields": [
            {
              "name": "follow"
            },
            {
              "name": "isDropsLinked"
            }
          ]
        },
        {
          "name": "Hearthstone",
          "kind": "OBJECT",
          "description": "Contains Heartstone game specific information.",
          "fields": [
            {
              "name": "broadcasterHeroClass"
            },
            {
              "name": "broadcasterHeroName"
            },
            {
              "name": "gameMode"
            },
            {
              "name": "opponentHeroClass"
            },
            {
              "name": "opponentHeroName"
            }
          ]
        },
        {
          "name": "HiddenView",
          "kind": "OBJECT",
          "description": "HiddenView holds the view configuration of an extension if it is a hidden load test extension.",
          "fields": [
            {
              "name": "viewerURL"
            }
          ]
        },
        {
          "name": "ID",
          "kind": "SCALAR",
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null
        },
        {
          "name": "Image",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "height"
            },
            {
              "name": "url"
            },
            {
              "name": "width"
            }
          ]
        },
        {
          "name": "ImageOptions",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "InGameContent",
          "kind": "OBJECT",
          "description": "Information about a purchasable in-game item.\nFor Commerce.",
          "fields": [
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "info"
            },
            {
              "name": "tags"
            }
          ]
        },
        {
          "name": "InGameContentPurchaseToken",
          "kind": "OBJECT",
          "description": "InGameContentPurchaseToken provides information related to a consumable purchase \ntoken about recently acquired in game content.",
          "fields": [
            {
              "name": "asin"
            },
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "title"
            }
          ]
        },
        {
          "name": "IncomingFriendRequestConnection",
          "kind": "OBJECT",
          "description": "Friend requests sent from other users to this user.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "newestEdge"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            },
            {
              "name": "totalUnreadCount"
            }
          ]
        },
        {
          "name": "IncomingFriendRequestEdge",
          "kind": "OBJECT",
          "description": "A friend request sent from another user to this user.",
          "fields": [
            {
              "name": "createdAt"
            },
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "InstallExtensionInput",
          "kind": "INPUT_OBJECT",
          "description": "The required input for an installExtension mutation.",
          "fields": null
        },
        {
          "name": "InstallExtensionPayload",
          "kind": "OBJECT",
          "description": "The result of an installExtension mutation.",
          "fields": [
            {
              "name": "installedExtension"
            }
          ]
        },
        {
          "name": "Int",
          "kind": "SCALAR",
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "fields": null
        },
        {
          "name": "Inventory",
          "kind": "OBJECT",
          "description": "Contains the inventory for a particular user. Inventory consists of\nDrops awarded, Crates, emotes from Crates, badges from Crates, and\nBits.",
          "fields": [
            {
              "name": "drops"
            }
          ]
        },
        {
          "name": "JoinChannelRoomsInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "JoinChannelRoomsPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "channel"
            }
          ]
        },
        {
          "name": "Language",
          "kind": "ENUM",
          "description": "An enumeration of languages available on Twitch.",
          "fields": null
        },
        {
          "name": "LanguageTag",
          "kind": "ENUM",
          "description": "An enumeration of user language tags (shortened BCP 47) available on Twitch. This should not be confused with Language, which is broadcaster language.",
          "fields": null
        },
        {
          "name": "LeaderboardTimePeriodType",
          "kind": "ENUM",
          "description": "LeaderboardTimePeriodType enumerates the various types of supported Leaderboards.",
          "fields": null
        },
        {
          "name": "LeagueOfLegends",
          "kind": "OBJECT",
          "description": "Contains Leagueoflegends game specific information.",
          "fields": [
            {
              "name": "championID"
            },
            {
              "name": "summonerDivision"
            },
            {
              "name": "summonerID"
            },
            {
              "name": "summonerName"
            },
            {
              "name": "summonerRank"
            }
          ]
        },
        {
          "name": "LeaveChannelRoomsInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "LeaveChannelRoomsPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "channel"
            }
          ]
        },
        {
          "name": "LinkOEmbed",
          "kind": "OBJECT",
          "description": "LinkOEmbed is a link oEmbed.  This looks strange being empty, but mirrors the oEmbed official spec most exactly.",
          "fields": [
            {
              "name": "authorName"
            },
            {
              "name": "authorURL"
            },
            {
              "name": "cacheAge"
            },
            {
              "name": "inputURL"
            },
            {
              "name": "providerName"
            },
            {
              "name": "providerURL"
            },
            {
              "name": "thumbnail"
            },
            {
              "name": "title"
            },
            {
              "name": "type"
            },
            {
              "name": "version"
            }
          ]
        },
        {
          "name": "LinkSSOInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "LinkSSOPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "link"
            }
          ]
        },
        {
          "name": "LiveConfigView",
          "kind": "OBJECT",
          "description": "LiveConfigView holds the view configuration of an extension if the live config dashboard page is supported.",
          "fields": [
            {
              "name": "viewerURL"
            }
          ]
        },
        {
          "name": "LiveRecommendationConnection",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "generationID"
            },
            {
              "name": "nodes"
            },
            {
              "name": "responseID"
            }
          ]
        },
        {
          "name": "ManagedEventLeavesCriteriaInput",
          "kind": "INPUT_OBJECT",
          "description": "Options for fetching pages of managed event leaves.",
          "fields": null
        },
        {
          "name": "MaturityRating",
          "kind": "OBJECT",
          "description": "Governmental rating agency information.\nFor Commerce.",
          "fields": [
            {
              "name": "details"
            },
            {
              "name": "iconURL"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "Media",
          "kind": "OBJECT",
          "description": "Media associated with a product.",
          "fields": [
            {
              "name": "images"
            }
          ]
        },
        {
          "name": "MerchandiseProduct",
          "kind": "OBJECT",
          "description": "A product is an item that we sell on twitch\nFor Commerce.",
          "fields": [
            {
              "name": "media"
            },
            {
              "name": "productInfo"
            }
          ]
        },
        {
          "name": "MessageBody",
          "kind": "OBJECT",
          "description": "MessageBody is a way of encoding emote annotated text.  The original text is included as content and the\nparsed emotes are included which indicate the start and end indexes they should replace.",
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "emotes"
            }
          ]
        },
        {
          "name": "Milestone",
          "kind": "OBJECT",
          "description": "Milestone is a construct is used within a tournament. For a given threshold, when the user \ncheers at or past this amount, they are able to claim a reward for cheering at this level.\nRewards can be fulfilled by different platforms.\nTypes of milestones:\n- **Global milestone**: for a given threshold, this milestone is reached when cheers from all \n  users on the channel is greater than or equal to the threshold. \n  This unlocks a reward for all users who have cheered.\n- **Individual milestone**: for a given threshold, this milestone is reached when an individual \n  user's total cheers in the channel is greater than or equal to the threshold. \n  This unlocks a reward for the individual user who cheered.\n- **Team milestone**: for a given threshold, this milestone is reached when an individual cheers \n  for a specific team in total is greater than or equal to the threshold. \n  This unlocks a reward for the individual user who cheered.\n\nNOTE: Should have been named CheeringTournamentMilestone.",
          "fields": [
            {
              "name": "endDate"
            },
            {
              "name": "id"
            },
            {
              "name": "objectiveTag"
            },
            {
              "name": "participationThreshold"
            },
            {
              "name": "rewards"
            },
            {
              "name": "startDate"
            },
            {
              "name": "threshold"
            }
          ]
        },
        {
          "name": "MobileView",
          "kind": "OBJECT",
          "description": "MobileView holds the view configuration of an extension if mobile is supported.",
          "fields": [
            {
              "name": "viewerURL"
            }
          ]
        },
        {
          "name": "ModConnection",
          "kind": "OBJECT",
          "description": "Paginated list of moderators of a channel.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "ModEdge",
          "kind": "OBJECT",
          "description": "Element in a list of moderators of a channel.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "ModUserError",
          "kind": "OBJECT",
          "description": "ModUserError contains details about a client error that occurred.",
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "ModUserErrorCode",
          "kind": "ENUM",
          "description": "ModUserErrorCode defines a client error that occurred while adding a moderator.",
          "fields": null
        },
        {
          "name": "ModUserInput",
          "kind": "INPUT_OBJECT",
          "description": "ModUserInput contains the parameters to add a user as a moderator to a channel.",
          "fields": null
        },
        {
          "name": "ModUserPayload",
          "kind": "OBJECT",
          "description": "ModUserPayload is the response when adding a user as a moderator.",
          "fields": [
            {
              "name": "channel"
            },
            {
              "name": "error"
            },
            {
              "name": "target"
            }
          ]
        },
        {
          "name": "Mutation",
          "kind": "OBJECT",
          "description": "Operations to update data in the Twitch API.",
          "fields": [
            {
              "name": "acceptFriendRequest"
            },
            {
              "name": "acceptProgramAgreement"
            },
            {
              "name": "addBrowserPushSubscription"
            },
            {
              "name": "addChannelBlockedTerm"
            },
            {
              "name": "addChannelPermittedTerm"
            },
            {
              "name": "addCollectionItem"
            },
            {
              "name": "addReaction"
            },
            {
              "name": "allowRejectedChatMessage"
            },
            {
              "name": "applyExtensionActivations"
            },
            {
              "name": "banUserFromChatRoom"
            },
            {
              "name": "banUserFromCommunity"
            },
            {
              "name": "banVideoCommenter"
            },
            {
              "name": "blockUser"
            },
            {
              "name": "cancelBounty"
            },
            {
              "name": "cancelFriendRequest"
            },
            {
              "name": "cancelPayoutOnboardingWorkflow"
            },
            {
              "name": "claimAllRewards"
            },
            {
              "name": "claimBounty"
            },
            {
              "name": "claimMilestone"
            },
            {
              "name": "claimPrimeOffer"
            },
            {
              "name": "clearUnreadFriendRequests"
            },
            {
              "name": "createClip"
            },
            {
              "name": "createCollection"
            },
            {
              "name": "createCommunity"
            },
            {
              "name": "createCommunityImageUploadURL"
            },
            {
              "name": "createDropImageUploadURL"
            },
            {
              "name": "createFriendRequest"
            },
            {
              "name": "createPanel"
            },
            {
              "name": "createPost"
            },
            {
              "name": "createRoom"
            },
            {
              "name": "createSegmentEvent"
            },
            {
              "name": "createSingleEvent"
            },
            {
              "name": "createTimetableEvent"
            },
            {
              "name": "createVideoComment"
            },
            {
              "name": "createVideoHighlight"
            },
            {
              "name": "deleteChannelBlockedTerm"
            },
            {
              "name": "deleteChannelPermittedTerm"
            },
            {
              "name": "deleteClips"
            },
            {
              "name": "deleteCollection"
            },
            {
              "name": "deleteEventCollection"
            },
            {
              "name": "deleteEventLeaf"
            },
            {
              "name": "deleteNotification"
            },
            {
              "name": "deletePanel"
            },
            {
              "name": "deletePost"
            },
            {
              "name": "deleteRoom"
            },
            {
              "name": "deleteRoomMessage"
            },
            {
              "name": "deleteVideo"
            },
            {
              "name": "deleteVideo"
            },
            {
              "name": "deleteVideoComment"
            },
            {
              "name": "denyRejectedChatMessage"
            },
            {
              "name": "dismissFriendRecommendation"
            },
            {
              "name": "dismissPinnedCheer"
            },
            {
              "name": "dismissPurchaseToken"
            },
            {
              "name": "dismissRitualToken"
            },
            {
              "name": "editCommunity"
            },
            {
              "name": "editRoomMessage"
            },
            {
              "name": "followCommunity"
            },
            {
              "name": "followDeprecatedEvent"
            },
            {
              "name": "followEvent"
            },
            {
              "name": "followGame"
            },
            {
              "name": "followUser"
            },
            {
              "name": "installExtension"
            },
            {
              "name": "joinChannelRooms"
            },
            {
              "name": "leaveChannelRooms"
            },
            {
              "name": "linkSSO"
            },
            {
              "name": "modUser"
            },
            {
              "name": "openCrate"
            },
            {
              "name": "orderPanels"
            },
            {
              "name": "publishClip"
            },
            {
              "name": "readNotifications"
            },
            {
              "name": "redeemRitualToken"
            },
            {
              "name": "redeemTrueXAd"
            },
            {
              "name": "registerPayoutInformation"
            },
            {
              "name": "rejectFriendRequest"
            },
            {
              "name": "removeCollectionItem"
            },
            {
              "name": "removeReaction"
            },
            {
              "name": "reorderCollectionItem"
            },
            {
              "name": "reportContent"
            },
            {
              "name": "reportUserInCommunity"
            },
            {
              "name": "reportVideoComment"
            },
            {
              "name": "reportWhisperThread"
            },
            {
              "name": "requestRitualToken"
            },
            {
              "name": "sendCheer"
            },
            {
              "name": "sendRoomMessage"
            },
            {
              "name": "sendWhisper"
            },
            {
              "name": "setAmendmentAcceptance"
            },
            {
              "name": "setChannelFeedEnabled"
            },
            {
              "name": "setChannelNotificationSetting"
            },
            {
              "name": "setDefaultPaymentMethod"
            },
            {
              "name": "setNotificationSetting"
            },
            {
              "name": "setPreferredLanguageTag"
            },
            {
              "name": "setSessionStatus"
            },
            {
              "name": "setUserResidence"
            },
            {
              "name": "sharePurchaseTokenInChat"
            },
            {
              "name": "spendSubscriptionCredit"
            },
            {
              "name": "startPayoutOnboardingWorkflow"
            },
            {
              "name": "timeoutUserFromCommunity"
            },
            {
              "name": "toggleRitualsEnabled"
            },
            {
              "name": "tosBanCommunity"
            },
            {
              "name": "unbanUserFromChatRoom"
            },
            {
              "name": "unbanUserFromCommunity"
            },
            {
              "name": "unblockUser"
            },
            {
              "name": "unfollowCommunity"
            },
            {
              "name": "unfollowDeprecatedEvent"
            },
            {
              "name": "unfollowEvent"
            },
            {
              "name": "unfollowGame"
            },
            {
              "name": "unfollowUser"
            },
            {
              "name": "unfriendUser"
            },
            {
              "name": "uninstallExtension"
            },
            {
              "name": "unlinkSSO"
            },
            {
              "name": "unmodUser"
            },
            {
              "name": "unsubscribeEmail"
            },
            {
              "name": "untimeoutUserFromCommunity"
            },
            {
              "name": "updateAllWhisperThreads"
            },
            {
              "name": "updateAutoModProperties"
            },
            {
              "name": "updateBroadcastSettings"
            },
            {
              "name": "updateChatColor"
            },
            {
              "name": "updateChatSettings"
            },
            {
              "name": "updateCheerPartnerSettings"
            },
            {
              "name": "updateClip"
            },
            {
              "name": "updateCollection"
            },
            {
              "name": "updateEventBroadcastNotifications"
            },
            {
              "name": "updateIsSharingActivity"
            },
            {
              "name": "updateOnboardingSkippedChannels"
            },
            {
              "name": "updatePanel"
            },
            {
              "name": "updatePremiereEvent"
            },
            {
              "name": "updatePrimeSettings"
            },
            {
              "name": "updateRoom"
            },
            {
              "name": "updateRoomModes"
            },
            {
              "name": "updateRoomView"
            },
            {
              "name": "updateSegmentEvent"
            },
            {
              "name": "updateSingleEvent"
            },
            {
              "name": "updateSubscriptionProduct"
            },
            {
              "name": "updateTimetableEvent"
            },
            {
              "name": "updateUserDirectoryHidden"
            },
            {
              "name": "updateUserSubscriptionSettings"
            },
            {
              "name": "updateVideoComment"
            },
            {
              "name": "updateVisibility"
            },
            {
              "name": "updateWhisperThread"
            },
            {
              "name": "viewedNotifications"
            }
          ]
        },
        {
          "name": "OEmbed",
          "kind": "INTERFACE",
          "description": "OEmbed is a universal spec converted to GraphQL from http://oembed.com/.",
          "fields": [
            {
              "name": "authorName"
            },
            {
              "name": "authorURL"
            },
            {
              "name": "cacheAge"
            },
            {
              "name": "inputURL"
            },
            {
              "name": "providerName"
            },
            {
              "name": "providerURL"
            },
            {
              "name": "thumbnail"
            },
            {
              "name": "title"
            },
            {
              "name": "type"
            },
            {
              "name": "version"
            }
          ]
        },
        {
          "name": "OfferDeliveryMethod",
          "kind": "ENUM",
          "description": "Deliver method type for Prime Offers entitlements.\nNote: This should have been named PrimeOfferDeliveryMethod.",
          "fields": null
        },
        {
          "name": "Onboarding",
          "kind": "OBJECT",
          "description": "Current state of the user in the onboarding process.",
          "fields": [
            {
              "name": "skippedChannelIDs"
            }
          ]
        },
        {
          "name": "OnsiteNotification",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "actions"
            },
            {
              "name": "body"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "creators"
            },
            {
              "name": "extra"
            },
            {
              "name": "id"
            },
            {
              "name": "isRead"
            },
            {
              "name": "thumbnailURL"
            },
            {
              "name": "type"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "OnsiteNotificationAction",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "body"
            },
            {
              "name": "type"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "OnsiteNotificationConnection",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "summary"
            }
          ]
        },
        {
          "name": "OnsiteNotificationContent",
          "kind": "UNION",
          "description": null,
          "fields": null
        },
        {
          "name": "OnsiteNotificationEdge",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "OnsiteNotificationsSummary",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "lastSeenAt"
            },
            {
              "name": "unseenCount"
            }
          ]
        },
        {
          "name": "OpenCrateInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "OpenCratePayload",
          "kind": "OBJECT",
          "description": null,
          "fields": []
        },
        {
          "name": "OrderPanelsInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "OrderPanelsPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "panels"
            }
          ]
        },
        {
          "name": "Overwatch",
          "kind": "OBJECT",
          "description": "Contains Overwatch game specific information.",
          "fields": [
            {
              "name": "broadcasterCharacter"
            },
            {
              "name": "broadcasterCharacterAbility"
            },
            {
              "name": "broadcasterCharacterRole"
            }
          ]
        },
        {
          "name": "PUBG",
          "kind": "OBJECT",
          "description": "Contains PUBG game specific information.",
          "fields": [
            {
              "name": "gameMode"
            },
            {
              "name": "playerAliveCount"
            }
          ]
        },
        {
          "name": "PageInfo",
          "kind": "OBJECT",
          "description": "PageInfo is a special field which contains information about the page,\nspecifically the cursors which the page starts and ends, and whether or\nnot the client can forward-paginate or backward-paginate.\n\nThis is part of the Relay Cursor Connections Specification:\nhttps://facebook.github.io/relay/graphql/connections.htm.",
          "fields": [
            {
              "name": "hasNextPage"
            },
            {
              "name": "hasPreviousPage"
            }
          ]
        },
        {
          "name": "PaidUpgrade",
          "kind": "OBJECT",
          "description": "Data about a paid upgrade for a subscription.\nie. a user upgrades a 1-month gift to a recurring subscription.",
          "fields": [
            {
              "name": "price"
            },
            {
              "name": "startsAt"
            }
          ]
        },
        {
          "name": "Panel",
          "kind": "INTERFACE",
          "description": "Panel is information about a single info panel for a channel.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "PanelActivationInput",
          "kind": "INPUT_OBJECT",
          "description": "The required configuration to activate a panel extension.",
          "fields": null
        },
        {
          "name": "PanelType",
          "kind": "ENUM",
          "description": "PanelType is the kind of panel.",
          "fields": null
        },
        {
          "name": "PanelView",
          "kind": "OBJECT",
          "description": "PanelView holds the view configuration of an extension if the panel anchor is supported.",
          "fields": [
            {
              "name": "height"
            },
            {
              "name": "viewerURL"
            }
          ]
        },
        {
          "name": "Partnership",
          "kind": "OBJECT",
          "description": "DEPRECATED.",
          "fields": [
            {
              "name": "isPartner"
            }
          ]
        },
        {
          "name": "PayPalBillingAgreement",
          "kind": "OBJECT",
          "description": "PayPalBillingAgreement describes a user's PayPal billing agreement for recurring or one time PayPal payments for goods or services.",
          "fields": [
            {
              "name": "countryCode"
            },
            {
              "name": "email"
            },
            {
              "name": "firstName"
            },
            {
              "name": "id"
            },
            {
              "name": "lastName"
            }
          ]
        },
        {
          "name": "PayWithAmazonConfigs",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "clientID"
            },
            {
              "name": "isProduction"
            },
            {
              "name": "sellerID"
            }
          ]
        },
        {
          "name": "PaymentCardType",
          "kind": "ENUM",
          "description": "Types of credit cards supported.",
          "fields": null
        },
        {
          "name": "PaymentInstrumentType",
          "kind": "ENUM",
          "description": "Payment instrument used through the payment provider.",
          "fields": null
        },
        {
          "name": "PaymentMethod",
          "kind": "OBJECT",
          "description": "Type of payment method a user has used to buy products on Twitch, such as subs.",
          "fields": [
            {
              "name": "cardType"
            },
            {
              "name": "extMethodID"
            },
            {
              "name": "lastFour"
            },
            {
              "name": "paymentType"
            },
            {
              "name": "provider"
            },
            {
              "name": "purchaseProfiles"
            }
          ]
        },
        {
          "name": "PaymentProvider",
          "kind": "ENUM",
          "description": "Type of payment providers.",
          "fields": null
        },
        {
          "name": "PaymentProviderConfigs",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "recurly"
            },
            {
              "name": "xsolla"
            },
            {
              "name": "zuora"
            }
          ]
        },
        {
          "name": "PaymentTransaction",
          "kind": "OBJECT",
          "description": "There are legacy and new data sources that contain similar payment transaction data. This type aims to merge several\ndata sources into one to expose a consistent payment history for each Twitch user.",
          "fields": [
            {
              "name": "currency"
            },
            {
              "name": "grossAmount"
            },
            {
              "name": "id"
            },
            {
              "name": "isGift"
            },
            {
              "name": "paymentMethod"
            },
            {
              "name": "product"
            },
            {
              "name": "purchasedAt"
            },
            {
              "name": "recipient"
            }
          ]
        },
        {
          "name": "PaymentTransactionConnection",
          "kind": "OBJECT",
          "description": "A paginated list of payment transactions, and its metadata.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "firstPurchasedAt"
            },
            {
              "name": "lastPurchasedAt"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PaymentTransactionConnectionCriteriaInput",
          "kind": "INPUT_OBJECT",
          "description": "Filter and sorting options for querying all transactions for a Twitch purchaser.",
          "fields": null
        },
        {
          "name": "PaymentTransactionEdge",
          "kind": "OBJECT",
          "description": "An element in a paginated list of payment transactions, and its metadata.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PaymentTransactionProduct",
          "kind": "OBJECT",
          "description": "Payment transaction purchased product details.",
          "fields": [
            {
              "name": "name"
            },
            {
              "name": "owner"
            },
            {
              "name": "tier"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "PaymentTransactionSort",
          "kind": "ENUM",
          "description": "Possible sort orders for lists of payment transactions.",
          "fields": null
        },
        {
          "name": "PaymentTransactionType",
          "kind": "ENUM",
          "description": "Payment transaction type, currently only subscription payments are surfaced. More types to be added soon such as Bits.",
          "fields": null
        },
        {
          "name": "PaymentTransactionTypeFilter",
          "kind": "ENUM",
          "description": "Select the kind of transactions.",
          "fields": null
        },
        {
          "name": "PayoutCategory",
          "kind": "ENUM",
          "description": "Enumerates valid payout categories.",
          "fields": null
        },
        {
          "name": "PayoutInvite",
          "kind": "OBJECT",
          "description": "PayoutInvite describes a user's invite to a payout program.",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "id"
            },
            {
              "name": "isForAffiliate"
            },
            {
              "name": "isForExtensionsDeveloper"
            },
            {
              "name": "isForPartner"
            },
            {
              "name": "workflow"
            }
          ]
        },
        {
          "name": "PayoutOnboardingCategory",
          "kind": "ENUM",
          "description": "PayoutOnboardingCategory enumerates valid categories for payout onboarding.",
          "fields": null
        },
        {
          "name": "PayoutOnboardingStep",
          "kind": "ENUM",
          "description": "PayoutOnboardingStep enumerates valid payout onboarding steps.",
          "fields": null
        },
        {
          "name": "PayoutOnboardingWorkflow",
          "kind": "OBJECT",
          "description": "PayoutOnboardingWorkflow describes the workflow details while a user is onboarding into a payout program.",
          "fields": [
            {
              "name": "currentStep"
            },
            {
              "name": "id"
            },
            {
              "name": "payoutSettingsURL"
            },
            {
              "name": "registration"
            },
            {
              "name": "taxInterview"
            },
            {
              "name": "taxMismatchErrors"
            }
          ]
        },
        {
          "name": "PayoutPlan",
          "kind": "OBJECT",
          "description": "Describes the payout plan a user has when enrolled into a payout program.",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "isReceivingRevenue"
            },
            {
              "name": "tags"
            }
          ]
        },
        {
          "name": "PayoutPlanTag",
          "kind": "ENUM",
          "description": "Enumerates valid payout plan tags.",
          "fields": null
        },
        {
          "name": "PayoutRegistration",
          "kind": "OBJECT",
          "description": "PayoutRegistration describes the personal information a user submitted while onboarding into a payout program.",
          "fields": [
            {
              "name": "birthdate"
            },
            {
              "name": "city"
            },
            {
              "name": "companyName"
            },
            {
              "name": "countryCode"
            },
            {
              "name": "email"
            },
            {
              "name": "firstName"
            },
            {
              "name": "lastName"
            },
            {
              "name": "middleName"
            },
            {
              "name": "parentEmail"
            },
            {
              "name": "parentName"
            },
            {
              "name": "postal"
            },
            {
              "name": "stateCode"
            },
            {
              "name": "streetAddress"
            },
            {
              "name": "streetAddress2"
            }
          ]
        },
        {
          "name": "PhotoOEmbed",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "authorName"
            },
            {
              "name": "authorURL"
            },
            {
              "name": "cacheAge"
            },
            {
              "name": "height"
            },
            {
              "name": "inputURL"
            },
            {
              "name": "providerName"
            },
            {
              "name": "providerURL"
            },
            {
              "name": "thumbnail"
            },
            {
              "name": "title"
            },
            {
              "name": "type"
            },
            {
              "name": "url"
            },
            {
              "name": "version"
            },
            {
              "name": "width"
            }
          ]
        },
        {
          "name": "PinnedCheerType",
          "kind": "ENUM",
          "description": "PinnedCheerType is the type of pinned cheer to remove.\nUsed as input in the DismissPinnedCheer mutation.",
          "fields": null
        },
        {
          "name": "Platform",
          "kind": "UNION",
          "description": "Stream Platform.",
          "fields": null
        },
        {
          "name": "PlatformEventSetting",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "isEnabled"
            },
            {
              "name": "platformName"
            },
            {
              "name": "settingState"
            }
          ]
        },
        {
          "name": "PlatformType",
          "kind": "ENUM",
          "description": "Stream platform type.",
          "fields": null
        },
        {
          "name": "PlayStation",
          "kind": "OBJECT",
          "description": "Stream metadata for PlayStation.",
          "fields": [
            {
              "name": "platform"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "Playing",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "game"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "Post",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "body"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "embeds"
            },
            {
              "name": "id"
            },
            {
              "name": "isDeleted"
            },
            {
              "name": "reactions"
            },
            {
              "name": "self"
            }
          ]
        },
        {
          "name": "PostEmbed",
          "kind": "UNION",
          "description": "TODO: Add events.",
          "fields": null
        },
        {
          "name": "PostPermissionSet",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "canDelete"
            }
          ]
        },
        {
          "name": "PostSelfConnection",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "permissions"
            }
          ]
        },
        {
          "name": "Premiere",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "items"
            },
            {
              "name": "pastPremiere"
            },
            {
              "name": "premiereEvent"
            },
            {
              "name": "status"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "PremiereConnection",
          "kind": "OBJECT",
          "description": "Paginated list of videos.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "PremiereEvent",
          "kind": "OBJECT",
          "description": "PremiereEvent represents a one-off, stand-alone event where the content is a Premiere.",
          "fields": [
            {
              "name": "channel"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "endAt"
            },
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "imageID"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "language"
            },
            {
              "name": "owner"
            },
            {
              "name": "premiere"
            },
            {
              "name": "self"
            },
            {
              "name": "startAt"
            },
            {
              "name": "stats"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "PremiereItem",
          "kind": "UNION",
          "description": "The types of objects that can be contained in a premiere.",
          "fields": null
        },
        {
          "name": "PremiereItemEdge",
          "kind": "OBJECT",
          "description": "A page entry, that contains a premiere item and a cursor to return\nfrom the query to allow pagination.\nNOTE: this should have been named PremiereEdge.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "PremiereStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PrimeEmoticons",
          "kind": "OBJECT",
          "description": "Wrapper around standard Emoticons for Prime Smilies Emoticons.",
          "fields": [
            {
              "name": "currentSetName"
            },
            {
              "name": "emoticonSets"
            }
          ]
        },
        {
          "name": "PrimeEmoticonsSetName",
          "kind": "ENUM",
          "description": "The Names for the smilies Emoticon sets supported by Prime.",
          "fields": null
        },
        {
          "name": "PrimeOffer",
          "kind": "OBJECT",
          "description": "Prime Digital Content Offers are displayed to users on Twitch via Offers in the top nav.",
          "fields": [
            {
              "name": "claimInstructions"
            },
            {
              "name": "content"
            },
            {
              "name": "deliveryMethod"
            },
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "priority"
            },
            {
              "name": "self"
            },
            {
              "name": "title"
            }
          ]
        },
        {
          "name": "PrimeOfferContent",
          "kind": "OBJECT",
          "description": "An Object containing metadata for Digital Content.",
          "fields": [
            {
              "name": "categories"
            },
            {
              "name": "externalURL"
            },
            {
              "name": "game"
            },
            {
              "name": "publisher"
            },
            {
              "name": "skus"
            }
          ]
        },
        {
          "name": "PrimeOfferSelfConnection",
          "kind": "OBJECT",
          "description": "The connection between the user and their offer entitlement state.",
          "fields": [
            {
              "name": "claimData"
            },
            {
              "name": "hasEntitlement"
            }
          ]
        },
        {
          "name": "PrimePromotion",
          "kind": "OBJECT",
          "description": "Metadata relevant to Prime copy or marketing that needs to be scheduled.",
          "fields": [
            {
              "name": "externalURL"
            },
            {
              "name": "id"
            },
            {
              "name": "isExternalLink"
            },
            {
              "name": "text"
            }
          ]
        },
        {
          "name": "PrimeSettings",
          "kind": "OBJECT",
          "description": "Prime Settings related data for a given user.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "isSubCreditChatNotificationEnabled"
            },
            {
              "name": "primeEmoticons"
            }
          ]
        },
        {
          "name": "ProductInfo",
          "kind": "OBJECT",
          "description": "General purchase information for a commerce item (games or in-game content).\nFor Commerce.",
          "fields": [
            {
              "name": "asin"
            },
            {
              "name": "crateASINs"
            },
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "isEntitled"
            },
            {
              "name": "isFeatured"
            },
            {
              "name": "isForSale"
            },
            {
              "name": "isNew"
            },
            {
              "name": "isOutOfStock"
            },
            {
              "name": "originalPrice"
            },
            {
              "name": "price"
            },
            {
              "name": "primeOffer"
            },
            {
              "name": "purchaseURL"
            },
            {
              "name": "title"
            }
          ]
        },
        {
          "name": "ProductLanguage",
          "kind": "OBJECT",
          "description": "Language provides information about how the language is supported for a product.\nFor Commerce.",
          "fields": [
            {
              "name": "hasAudio"
            },
            {
              "name": "hasInterface"
            },
            {
              "name": "hasSubtitles"
            },
            {
              "name": "id"
            },
            {
              "name": "language"
            }
          ]
        },
        {
          "name": "ProductMedia",
          "kind": "OBJECT",
          "description": "Aggregates all media associated with this product. E.g. screnshots, box art, videos.\nFor Commerce.",
          "fields": [
            {
              "name": "backgroundImageURL"
            },
            {
              "name": "boxArtURL"
            },
            {
              "name": "id"
            },
            {
              "name": "screenshotURLs"
            },
            {
              "name": "videos"
            }
          ]
        },
        {
          "name": "ProgramAgreement",
          "kind": "OBJECT",
          "description": "ProgramAgreement describes the End User License Agreement associated with a user's current payout plan.",
          "fields": [
            {
              "name": "body"
            },
            {
              "name": "type"
            },
            {
              "name": "version"
            }
          ]
        },
        {
          "name": "PublishClipError",
          "kind": "OBJECT",
          "description": "PublishClipError is an error associated with the publishClip mutation.",
          "fields": [
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "PublishClipInput",
          "kind": "INPUT_OBJECT",
          "description": "PublishClipInput edits the clip with the provided slug via segments.",
          "fields": null
        },
        {
          "name": "PublishClipPayload",
          "kind": "OBJECT",
          "description": "PublishClipPayload returns the edited clip or an error.",
          "fields": [
            {
              "name": "clip"
            },
            {
              "name": "error"
            }
          ]
        },
        {
          "name": "PurchaseProfile",
          "kind": "OBJECT",
          "description": "Purchase profile of a recurring or non-recurring subscription that a user bought.",
          "fields": [
            {
              "name": "cancelledAt"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "expiresAt"
            },
            {
              "name": "extPurchaserID"
            },
            {
              "name": "extSubscriptionID"
            },
            {
              "name": "id"
            },
            {
              "name": "isExpired"
            },
            {
              "name": "isGift"
            },
            {
              "name": "isPaying"
            },
            {
              "name": "isRecurring"
            },
            {
              "name": "isRefundable"
            },
            {
              "name": "paidAt"
            },
            {
              "name": "productType"
            },
            {
              "name": "purchasedAt"
            },
            {
              "name": "purchaserEmail"
            },
            {
              "name": "purchaserID"
            },
            {
              "name": "purchaserName"
            },
            {
              "name": "renewalCurrency"
            },
            {
              "name": "renewalPrice"
            },
            {
              "name": "renewalStoppedAt"
            },
            {
              "name": "state"
            },
            {
              "name": "subscriptionBenefit"
            },
            {
              "name": "ticketID"
            },
            {
              "name": "ticketOwnerID"
            },
            {
              "name": "ticketProductOwnerID"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "willRenew"
            }
          ]
        },
        {
          "name": "PurchaseProfileState",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PurchaseToken",
          "kind": "OBJECT",
          "description": "PurchaseToken is a token that appears in the chat, specific to \na tuid/channel (i.e. if a customer buys a product, we give them the option of \nsharing it in the channel they bought it from).",
          "fields": [
            {
              "name": "asin"
            },
            {
              "name": "badges"
            },
            {
              "name": "bits"
            },
            {
              "name": "crateCount"
            },
            {
              "name": "emoteSets"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "inGameContents"
            },
            {
              "name": "status"
            },
            {
              "name": "timeReceived"
            },
            {
              "name": "title"
            },
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "PurchaseTokenItem",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "Query",
          "kind": "OBJECT",
          "description": "Root fields to access the Twitch API.",
          "fields": [
            {
              "name": "badges"
            },
            {
              "name": "bitsOffers"
            },
            {
              "name": "chatRoomBanStatus"
            },
            {
              "name": "clip"
            },
            {
              "name": "collection"
            },
            {
              "name": "community"
            },
            {
              "name": "currentUser"
            },
            {
              "name": "directories"
            },
            {
              "name": "directory"
            },
            {
              "name": "event"
            },
            {
              "name": "extension"
            },
            {
              "name": "extensions"
            },
            {
              "name": "featuredStreams"
            },
            {
              "name": "feed"
            },
            {
              "name": "feedEmbed"
            },
            {
              "name": "feedItemContent"
            },
            {
              "name": "game"
            },
            {
              "name": "games"
            },
            {
              "name": "merchandise"
            },
            {
              "name": "primeOffers"
            },
            {
              "name": "primePromotions"
            },
            {
              "name": "rejectedChatMessage"
            },
            {
              "name": "reportReasons"
            },
            {
              "name": "requestInfo"
            },
            {
              "name": "room"
            },
            {
              "name": "streams"
            },
            {
              "name": "subscriptionProduct"
            },
            {
              "name": "user"
            },
            {
              "name": "users"
            },
            {
              "name": "video"
            },
            {
              "name": "videoComments"
            },
            {
              "name": "videos"
            },
            {
              "name": "whisperThread"
            }
          ]
        },
        {
          "name": "ReactableContent",
          "kind": "UNION",
          "description": null,
          "fields": null
        },
        {
          "name": "Reaction",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "count"
            },
            {
              "name": "emote"
            },
            {
              "name": "self"
            }
          ]
        },
        {
          "name": "ReactionSelfConnection",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "hasReacted"
            }
          ]
        },
        {
          "name": "ReadNotificationsInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "ReadNotificationsPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "count"
            },
            {
              "name": "notifications"
            }
          ]
        },
        {
          "name": "Recommendations",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "friends"
            },
            {
              "name": "liveRecommendations"
            },
            {
              "name": "videos"
            }
          ]
        },
        {
          "name": "RecommendedFriend",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "reason"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "RecommendedStream",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "stream"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "RecommendedStreamConnection",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "nodes"
            }
          ]
        },
        {
          "name": "RecommendedVideoConnection",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "setID"
            }
          ]
        },
        {
          "name": "RecommendedVideoEdge",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RecurlyConfigs",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "braintreeClientAuthorization"
            },
            {
              "name": "payWithAmazonConfigs"
            },
            {
              "name": "publicKey"
            }
          ]
        },
        {
          "name": "RedeemRitualTokenError",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "RedeemRitualTokenErrorCode",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "RedeemRitualTokenInput",
          "kind": "INPUT_OBJECT",
          "description": "RedeemRitualTokenInput is the input when redeeming a ritual token.",
          "fields": null
        },
        {
          "name": "RedeemRitualTokenPayload",
          "kind": "OBJECT",
          "description": "RedeemRitualTokenPayload is the response when redeeming a ritual token.",
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "RedeemTrueXAdInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "RedeemTrueXAdPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "currentUser"
            },
            {
              "name": "grantedBits"
            }
          ]
        },
        {
          "name": "RegisterPayoutInformationError",
          "kind": "OBJECT",
          "description": "RegisterPayoutInformationError describes the error that occured when registering a user's payout information during payout onboarding.",
          "fields": [
            {
              "name": "code"
            },
            {
              "name": "invalidFields"
            }
          ]
        },
        {
          "name": "RegisterPayoutInformationErrorCode",
          "kind": "ENUM",
          "description": "Enumerates possible errors when registering payout information.",
          "fields": null
        },
        {
          "name": "RegisterPayoutInformationFieldName",
          "kind": "ENUM",
          "description": "Enumerates vaid field names when registering payout information.",
          "fields": null
        },
        {
          "name": "RegisterPayoutInformationInput",
          "kind": "INPUT_OBJECT",
          "description": "RegisterPayoutInformationInput is the input required to register a user's payout information during payout onboarding.",
          "fields": null
        },
        {
          "name": "RegisterPayoutInformationPayload",
          "kind": "OBJECT",
          "description": "RegisterPayoutInformationPayload is the updated workflow after registration is accepted.",
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "workflow"
            }
          ]
        },
        {
          "name": "RejectFriendRequestInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "RejectFriendRequestPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "RejectedChatMessage",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "body"
            },
            {
              "name": "failedFragments"
            },
            {
              "name": "id"
            },
            {
              "name": "isResolved"
            },
            {
              "name": "sender"
            },
            {
              "name": "target"
            }
          ]
        },
        {
          "name": "RemoveCollectionItemInput",
          "kind": "INPUT_OBJECT",
          "description": "RemoveCollectionItemInput accepts a collectionID and item ID and parameters to remove the item from a collection.",
          "fields": null
        },
        {
          "name": "RemoveCollectionItemPayload",
          "kind": "OBJECT",
          "description": "The response from removing an item from a collection.",
          "fields": [
            {
              "name": "collection"
            }
          ]
        },
        {
          "name": "RemoveReactionInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "RemoveReactionPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "content"
            }
          ]
        },
        {
          "name": "ReorderCollectionItemInput",
          "kind": "INPUT_OBJECT",
          "description": "ReorderCollectionItemInput accepts a collectionID and item ID and parameters to update the item order of a collection.",
          "fields": null
        },
        {
          "name": "ReorderCollectionItemPayload",
          "kind": "OBJECT",
          "description": "The response from reordering an item in a collection.",
          "fields": [
            {
              "name": "collection"
            }
          ]
        },
        {
          "name": "ReportContentInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "ReportContentPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "contentID"
            }
          ]
        },
        {
          "name": "ReportContentType",
          "kind": "ENUM",
          "description": "Types of content that can be reported.",
          "fields": null
        },
        {
          "name": "ReportReason",
          "kind": "OBJECT",
          "description": "A valid reason for a report.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "text"
            }
          ]
        },
        {
          "name": "ReportUserInCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "ReportUserInCommunityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "ReportVideoCommentInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "ReportVideoCommentPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "comment"
            }
          ]
        },
        {
          "name": "ReportWhisperThreadInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "ReportWhisperThreadPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "thread"
            }
          ]
        },
        {
          "name": "RequestInfo",
          "kind": "OBJECT",
          "description": "Metadata about a GraphQL request.",
          "fields": [
            {
              "name": "countryCode"
            },
            {
              "name": "fromEU"
            },
            {
              "name": "ipAddress"
            }
          ]
        },
        {
          "name": "RequestRitualTokenError",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "RequestRitualTokenErrorCode",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "RequestRitualTokenInput",
          "kind": "INPUT_OBJECT",
          "description": "RequestRitualTokenInput is the input when requesting a ritual token.",
          "fields": null
        },
        {
          "name": "RequestRitualTokenPayload",
          "kind": "OBJECT",
          "description": "RequestRitualTokenPayload is the response when requesting a ritual token.",
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "RequiredAction",
          "kind": "ENUM",
          "description": "Represents the values possible in requiredAction after the activateMutation mutation.",
          "fields": null
        },
        {
          "name": "ResubNotification",
          "kind": "OBJECT",
          "description": "A recent resub token to use for sending a special message.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "months"
            },
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "RetailProduct",
          "kind": "OBJECT",
          "description": "Details associated with a retail product offer.\nFor Commerce.",
          "fields": [
            {
              "name": "brandName"
            },
            {
              "name": "detailBullets"
            },
            {
              "name": "id"
            },
            {
              "name": "info"
            },
            {
              "name": "isPrimeEligible"
            }
          ]
        },
        {
          "name": "RichOEmbed",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "authorName"
            },
            {
              "name": "authorURL"
            },
            {
              "name": "cacheAge"
            },
            {
              "name": "height"
            },
            {
              "name": "html"
            },
            {
              "name": "inputURL"
            },
            {
              "name": "providerName"
            },
            {
              "name": "providerURL"
            },
            {
              "name": "thumbnail"
            },
            {
              "name": "title"
            },
            {
              "name": "type"
            },
            {
              "name": "version"
            },
            {
              "name": "width"
            }
          ]
        },
        {
          "name": "RitualToken",
          "kind": "OBJECT",
          "description": "A ritual is an opportunity for a viewer to better connect with a streamer's\ncommunity by announcing when they reach milestones in the channel.\nA ritual token is issued when a user is eligible for the ritual, and can be\nredeemed to send the announcement in a channel.",
          "fields": [
            {
              "name": "channel"
            },
            {
              "name": "expiresAt"
            },
            {
              "name": "id"
            },
            {
              "name": "status"
            },
            {
              "name": "type"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "RitualTokenStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "RitualTokenType",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "Room",
          "kind": "OBJECT",
          "description": "A chatroom associated with a channel where members of the room can exchange messages.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "members"
            },
            {
              "name": "messages"
            },
            {
              "name": "modes"
            },
            {
              "name": "name"
            },
            {
              "name": "owner"
            },
            {
              "name": "rolePermissions"
            },
            {
              "name": "self"
            },
            {
              "name": "topic"
            }
          ]
        },
        {
          "name": "RoomMemberConnection",
          "kind": "OBJECT",
          "description": "Paginated list of room members (users).",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "RoomMemberEdge",
          "kind": "OBJECT",
          "description": "Element in a list of room members.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "RoomMemberType",
          "kind": "ENUM",
          "description": "Type of user for grouping users in the rooms member list.",
          "fields": null
        },
        {
          "name": "RoomMessage",
          "kind": "OBJECT",
          "description": "A message sent from a user to a room.",
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "deletedAt"
            },
            {
              "name": "id"
            },
            {
              "name": "room"
            },
            {
              "name": "sender"
            },
            {
              "name": "sentAt"
            }
          ]
        },
        {
          "name": "RoomMessageConnection",
          "kind": "OBJECT",
          "description": "Paginated list of messages in a room.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "RoomMessageContent",
          "kind": "OBJECT",
          "description": "The content of a user's message to a room.",
          "fields": [
            {
              "name": "fragments"
            },
            {
              "name": "text"
            }
          ]
        },
        {
          "name": "RoomMessageEdge",
          "kind": "OBJECT",
          "description": "Element in a list of messages.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "RoomMessageFragment",
          "kind": "OBJECT",
          "description": "One parsed part of a message, which may be an emote, mention, or plaintext.",
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "text"
            }
          ]
        },
        {
          "name": "RoomMessageItem",
          "kind": "UNION",
          "description": null,
          "fields": null
        },
        {
          "name": "RoomModes",
          "kind": "OBJECT",
          "description": "Modes that have been enabled for the room.",
          "fields": [
            {
              "name": "emotesOnlyModeEnabled"
            },
            {
              "name": "r9kModeEnabled"
            },
            {
              "name": "slowModeDurationSeconds"
            }
          ]
        },
        {
          "name": "RoomPermissions",
          "kind": "OBJECT",
          "description": "Represents the permissions a user has in a room.",
          "fields": [
            {
              "name": "moderate"
            },
            {
              "name": "readMessages"
            },
            {
              "name": "sendMessages"
            }
          ]
        },
        {
          "name": "RoomRole",
          "kind": "ENUM",
          "description": "Describes the role a user must be in order to perform an action, such as sending messages. Roles are\nhierarchical, so users that meet a role also meet all lower roles as well. For example, a moderator\nmeets the subscriber role, even if they are not subscribed to the channel. Roles are defined in order\nfrom highest to lowest in the enum.",
          "fields": null
        },
        {
          "name": "RoomRolePermissions",
          "kind": "OBJECT",
          "description": "RoomRolePermissions describes the role necessary to perform actions in a room.",
          "fields": [
            {
              "name": "read"
            },
            {
              "name": "send"
            }
          ]
        },
        {
          "name": "RoomView",
          "kind": "OBJECT",
          "description": "A RoomView represents the authenticated user's self connection to a room, and includes the user's\nsettings and permissions.",
          "fields": [
            {
              "name": "isArchived"
            },
            {
              "name": "isMuted"
            },
            {
              "name": "isUnread"
            },
            {
              "name": "lastReadAt"
            },
            {
              "name": "permissions"
            },
            {
              "name": "room"
            },
            {
              "name": "unreadMentionCount"
            }
          ]
        },
        {
          "name": "SCETitle",
          "kind": "OBJECT",
          "description": "Sony Computer Entertainment (SCE) title properties.\nUsed as part of stream metadata for PlayStation.",
          "fields": [
            {
              "name": "ageRating"
            },
            {
              "name": "attribute"
            },
            {
              "name": "genre"
            },
            {
              "name": "id"
            },
            {
              "name": "isPreset"
            },
            {
              "name": "language"
            },
            {
              "name": "metadata"
            },
            {
              "name": "name"
            },
            {
              "name": "presetText"
            },
            {
              "name": "presetTextDescription"
            },
            {
              "name": "productID"
            },
            {
              "name": "sessionID"
            },
            {
              "name": "shortName"
            },
            {
              "name": "storeURL"
            }
          ]
        },
        {
          "name": "SCEUser",
          "kind": "OBJECT",
          "description": "Sony Computer Entertainment (SCE) user properties.\nUsed as part of stream metadata for PlayStation.",
          "fields": [
            {
              "name": "country"
            },
            {
              "name": "npID"
            },
            {
              "name": "onlineID"
            }
          ]
        },
        {
          "name": "SSOLink",
          "kind": "OBJECT",
          "description": "A link between a single sign-on (SSO) app and a Twitch account.\nSSO apps are the Twitch apps on console and smart TV.",
          "fields": [
            {
              "name": "app"
            },
            {
              "name": "ssoID"
            }
          ]
        },
        {
          "name": "SegmentEvent",
          "kind": "OBJECT",
          "description": "Segment events are sub-events that represent a piece of content that is part of a greater event.\nSegmentEvent would be good at representing:\n  * A single run of a gaming event like \"Awesome Games Done Quick 2017\".  These segments could be children\n    under a TimetableEvent which would group all the runs for \"Awesome Games Done Quick 2018\" together.\n  * A single panel in a conference like \"TwitchCon 2017\".  These segments could be children\n    under a TimetableEvent which would group all the panels for the conference together.",
          "fields": [
            {
              "name": "channel"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "endAt"
            },
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "imageID"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "language"
            },
            {
              "name": "owner"
            },
            {
              "name": "parent"
            },
            {
              "name": "self"
            },
            {
              "name": "startAt"
            },
            {
              "name": "stats"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "videos"
            }
          ]
        },
        {
          "name": "SegmentParentEvent",
          "kind": "UNION",
          "description": "SegmentParentEvent defines the types of container-events that a SegmentEvent may be a part of.\nNOTE: Clients should be resilient to SegmentParentEvent including new types in the future.",
          "fields": null
        },
        {
          "name": "SendCheerInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "SendCheerPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "currentUser"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "SendRoomMessageError",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "code"
            },
            {
              "name": "remainingDurationSeconds"
            },
            {
              "name": "slowModeDurationSeconds"
            }
          ]
        },
        {
          "name": "SendRoomMessageErrorCode",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "SendRoomMessageInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "SendRoomMessagePayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "SendWhisperInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "SendWhisperPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "SetAmendmentAcceptanceInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "SetAmendmentAcceptancePayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "twitch"
            }
          ]
        },
        {
          "name": "SetChannelFeedEnabledInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "SetChannelFeedEnabledPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "SetChannelNotificationSettingInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "SetChannelNotificationSettingPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "settingState"
            }
          ]
        },
        {
          "name": "SetDefaultPaymentMethodInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "SetDefaultPaymentMethodPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "paymentMethod"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "SetNotificationSettingInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "SetNotificationSettingPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "settingState"
            }
          ]
        },
        {
          "name": "SetPreferredLanguageTagInput",
          "kind": "INPUT_OBJECT",
          "description": "The required input for a setPreferredLanguageTag mutation.",
          "fields": null
        },
        {
          "name": "SetPreferredLanguageTagPayload",
          "kind": "OBJECT",
          "description": "The result of a setPreferredLanguageTag mutation.",
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "SetSessionStatusInput",
          "kind": "INPUT_OBJECT",
          "description": "SetSessionStatusInput represents a user's status within a single session (browser tab, game, desktop application,\nmobile application, etc.).",
          "fields": null
        },
        {
          "name": "SetSessionStatusPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "setAgainInSeconds"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "SetUserResidenceInput",
          "kind": "INPUT_OBJECT",
          "description": "SetUserResidenceInput is input required to set a user's residence.",
          "fields": null
        },
        {
          "name": "SetUserResidencePayload",
          "kind": "OBJECT",
          "description": "SetUserResidencePayload is the response from the SetUserResidence mutation.",
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "Share",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "author"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "target"
            }
          ]
        },
        {
          "name": "SharePurchaseTokenInChatInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "SharePurchaseTokenInChatPayload",
          "kind": "OBJECT",
          "description": "SharePurchaseTokenInChatPayload contains the token value of the shared purchase token.",
          "fields": [
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "ShareTarget",
          "kind": "UNION",
          "description": null,
          "fields": null
        },
        {
          "name": "SingleEvent",
          "kind": "OBJECT",
          "description": "SingleEvent represents a one-off, stand-alone event where the content is a live stream on a single channel.",
          "fields": [
            {
              "name": "channel"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "endAt"
            },
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "imageID"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "language"
            },
            {
              "name": "owner"
            },
            {
              "name": "self"
            },
            {
              "name": "startAt"
            },
            {
              "name": "stats"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "videos"
            }
          ]
        },
        {
          "name": "SmiliesSet",
          "kind": "OBJECT",
          "description": "Wrapper around the standard emoticon groups for Prime Emoticons.",
          "fields": [
            {
              "name": "emoticonSet"
            },
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "SocialStream",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "friend"
            },
            {
              "name": "stream"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "SortOrder",
          "kind": "ENUM",
          "description": "Sort direction.",
          "fields": null
        },
        {
          "name": "SpendSubscriptionCreditError",
          "kind": "OBJECT",
          "description": "Error returned when attempting to spend subscription credit.",
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "SpendSubscriptionCreditErrorCode",
          "kind": "ENUM",
          "description": "Possible error codes returned when attempting to spend subscription credit.",
          "fields": null
        },
        {
          "name": "SpendSubscriptionCreditInput",
          "kind": "INPUT_OBJECT",
          "description": "Input requires the broadcaster to be payed and user to deduct credit.",
          "fields": null
        },
        {
          "name": "SpendSubscriptionCreditPayload",
          "kind": "OBJECT",
          "description": "Mutated data after spending the subscription credit.",
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "subscriptionBenefit"
            },
            {
              "name": "userID"
            }
          ]
        },
        {
          "name": "StartPayoutOnboardingWorkflowInput",
          "kind": "INPUT_OBJECT",
          "description": "StartPayoutOnboardingWorkflowInput returns the required input when starting a new workflow for payout onboarding.",
          "fields": null
        },
        {
          "name": "StartPayoutOnboardingWorkflowPayload",
          "kind": "OBJECT",
          "description": "StartPayoutOnboardingWorkflowPayload returns a new workflow when starting payout onboarding.",
          "fields": [
            {
              "name": "workflow"
            }
          ]
        },
        {
          "name": "Stream",
          "kind": "OBJECT",
          "description": "A live stream.",
          "fields": [
            {
              "name": "averageFPS"
            },
            {
              "name": "bitrate"
            },
            {
              "name": "broadcastLanguage"
            },
            {
              "name": "broadcaster"
            },
            {
              "name": "codec"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "directories"
            },
            {
              "name": "game"
            },
            {
              "name": "height"
            },
            {
              "name": "id"
            },
            {
              "name": "isDirectoryHidden"
            },
            {
              "name": "isPartner"
            },
            {
              "name": "isStreamDropsEnabled"
            },
            {
              "name": "language"
            },
            {
              "name": "lastUpdatedAt"
            },
            {
              "name": "maxHeight"
            },
            {
              "name": "platform"
            },
            {
              "name": "previewImageURL"
            },
            {
              "name": "retailOffers"
            },
            {
              "name": "self"
            },
            {
              "name": "streamMetadata"
            },
            {
              "name": "type"
            },
            {
              "name": "viewersCount"
            },
            {
              "name": "width"
            }
          ]
        },
        {
          "name": "StreamConnection",
          "kind": "OBJECT",
          "description": "Paginated list of Streams.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "generationID"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "responseID"
            }
          ]
        },
        {
          "name": "StreamEdge",
          "kind": "OBJECT",
          "description": "Contains information about a Streams's relationship to a given page (connection),\nand the Stream itself.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "StreamMetadata",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "counterStrikeGlobalOffensive"
            },
            {
              "name": "hearthstone"
            },
            {
              "name": "leagueOfLegends"
            },
            {
              "name": "overwatch"
            },
            {
              "name": "pubg"
            }
          ]
        },
        {
          "name": "StreamMetadataFilterInput",
          "kind": "INPUT_OBJECT",
          "description": "Query to let consumers filter streams that have specific metadata.\ne.g. return only those hearthstone streams that have broadcasterheroclass as mage.\nFE uses these parameters to implemtent filters.",
          "fields": null
        },
        {
          "name": "StreamRecommendationType",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "StreamSelfConnection",
          "kind": "OBJECT",
          "description": "The relationship between the authenticated user and a stream.",
          "fields": [
            {
              "name": "retailOffers"
            }
          ]
        },
        {
          "name": "StreamSort",
          "kind": "ENUM",
          "description": "Possible ways of sorting collections of live streams.",
          "fields": null
        },
        {
          "name": "Streaming",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "stream"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "String",
          "kind": "SCALAR",
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null
        },
        {
          "name": "SubscribedChannelConnection",
          "kind": "OBJECT",
          "description": "A list of channels subscribed to by a user.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "SubscribedChannelEdge",
          "kind": "OBJECT",
          "description": "A broadcaster user with cursor.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "SubscriptionBenefit",
          "kind": "OBJECT",
          "description": "Data about a user's subscription to a broadcaster.",
          "fields": [
            {
              "name": "endsAt"
            },
            {
              "name": "gift"
            },
            {
              "name": "id"
            },
            {
              "name": "intervalNumber"
            },
            {
              "name": "originID"
            },
            {
              "name": "paidUpgrade"
            },
            {
              "name": "platform"
            },
            {
              "name": "product"
            },
            {
              "name": "purchasedWithPrime"
            },
            {
              "name": "renewsAt"
            },
            {
              "name": "thirdPartySKU"
            },
            {
              "name": "tier"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "SubscriptionBenefitConnection",
          "kind": "OBJECT",
          "description": "A paginated list of subscription benefits.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "SubscriptionBenefitCriteriaInput",
          "kind": "INPUT_OBJECT",
          "description": "Criteria for building paginated list of user's all active subscriptions.",
          "fields": null
        },
        {
          "name": "SubscriptionBenefitEdge",
          "kind": "OBJECT",
          "description": "An element in a paginated list of subscription benefits.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "SubscriptionBenefitFilter",
          "kind": "ENUM",
          "description": "Set of ways to filter subscription benefit paginated results.",
          "fields": null
        },
        {
          "name": "SubscriptionCheckoutConfigs",
          "kind": "OBJECT",
          "description": "Configs that help initiate the subscription checkout flow.",
          "fields": [
            {
              "name": "canGift"
            },
            {
              "name": "isOneMonthFreeEligible"
            },
            {
              "name": "paymentProviderConfigs"
            }
          ]
        },
        {
          "name": "SubscriptionGift",
          "kind": "OBJECT",
          "description": "Gift information for a subscription benefit.",
          "fields": [
            {
              "name": "giftDate"
            },
            {
              "name": "gifter"
            },
            {
              "name": "isGift"
            }
          ]
        },
        {
          "name": "SubscriptionInterval",
          "kind": "OBJECT",
          "description": "Represents the interval of a subscription product.",
          "fields": [
            {
              "name": "duration"
            },
            {
              "name": "unit"
            }
          ]
        },
        {
          "name": "SubscriptionIntervalUnit",
          "kind": "ENUM",
          "description": "Denotes the unit of the period of a subscription product.",
          "fields": null
        },
        {
          "name": "SubscriptionPlatform",
          "kind": "ENUM",
          "description": "SubscriptionPlatform enumerates platform options such as WEB, IOS, ANDROID.",
          "fields": null
        },
        {
          "name": "SubscriptionProduct",
          "kind": "OBJECT",
          "description": "A subscription that is purchasable by users.\nOnce purchased, the subscription entitles the user to use special emote sets on Twitch.",
          "fields": [
            {
              "name": "displayName"
            },
            {
              "name": "emoteSetID"
            },
            {
              "name": "emotes"
            },
            {
              "name": "giftPromotion"
            },
            {
              "name": "hasAdFree"
            },
            {
              "name": "hasFastChat"
            },
            {
              "name": "hasSubOnlyChat"
            },
            {
              "name": "hasSubonlyVideoArchive"
            },
            {
              "name": "id"
            },
            {
              "name": "interval"
            },
            {
              "name": "name"
            },
            {
              "name": "owner"
            },
            {
              "name": "price"
            },
            {
              "name": "self"
            },
            {
              "name": "thirdPartyTemplateSKU"
            },
            {
              "name": "tier"
            },
            {
              "name": "type"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "SubscriptionProductSelfConnection",
          "kind": "OBJECT",
          "description": "The connection between the user and subscription product.",
          "fields": [
            {
              "name": "benefit"
            },
            {
              "name": "checkoutConfigs"
            },
            {
              "name": "promotion"
            },
            {
              "name": "purchase"
            },
            {
              "name": "thirdPartyPurchaseSKU"
            }
          ]
        },
        {
          "name": "SubscriptionProductType",
          "kind": "ENUM",
          "description": "The types of subscription products that can be purchased.",
          "fields": null
        },
        {
          "name": "SubscriptionPromotion",
          "kind": "OBJECT",
          "description": "The promotion offer on subscription product.",
          "fields": [
            {
              "name": "discountType"
            },
            {
              "name": "discountValue"
            },
            {
              "name": "newPrice"
            },
            {
              "name": "oldPrice"
            }
          ]
        },
        {
          "name": "SubscriptionPromotionDiscountType",
          "kind": "ENUM",
          "description": "Valid discount types for Subscription promotion.",
          "fields": null
        },
        {
          "name": "SubscriptionPurchase",
          "kind": "OBJECT",
          "description": "A user's subscription purchase details, part of the Subscription Checkout workflow.",
          "fields": [
            {
              "name": "compatiblePurchases"
            },
            {
              "name": "details"
            }
          ]
        },
        {
          "name": "SubscriptionPurchaseDetails",
          "kind": "OBJECT",
          "description": "The receipt details for a subscription purchase.",
          "fields": [
            {
              "name": "cancelledAt"
            },
            {
              "name": "currency"
            },
            {
              "name": "paymentProvider"
            },
            {
              "name": "price"
            },
            {
              "name": "productTier"
            },
            {
              "name": "productType"
            },
            {
              "name": "state"
            }
          ]
        },
        {
          "name": "SubscriptionPurchaseState",
          "kind": "ENUM",
          "description": "The various states of the subscription purchase receipt.",
          "fields": null
        },
        {
          "name": "SupportedPlatform",
          "kind": "OBJECT",
          "description": "Platform information for a game.\nNOTE: Should have been named GameSupportedPlatform.\nFor Commerce.",
          "fields": [
            {
              "name": "iconURL"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "SystemRequirement",
          "kind": "OBJECT",
          "description": "SystemRequirement aggregates information about the hardware and software needed to run the product.\nFor Commerce.",
          "fields": [
            {
              "name": "directXVersion"
            },
            {
              "name": "hardDriveSpace"
            },
            {
              "name": "id"
            },
            {
              "name": "osVersion"
            },
            {
              "name": "other"
            },
            {
              "name": "processor"
            },
            {
              "name": "ram"
            },
            {
              "name": "videoCard"
            }
          ]
        },
        {
          "name": "TOSBanCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "TOSBanCommunityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "community"
            }
          ]
        },
        {
          "name": "TaxInterview",
          "kind": "OBJECT",
          "description": "TaxInterview describes the information for a user's Amazon tax interview during payout onboarding.",
          "fields": [
            {
              "name": "accountID"
            },
            {
              "name": "clientID"
            },
            {
              "name": "governmentAlias"
            },
            {
              "name": "locale"
            },
            {
              "name": "signature"
            },
            {
              "name": "type"
            },
            {
              "name": "url"
            }
          ]
        },
        {
          "name": "TaxInterviewType",
          "kind": "ENUM",
          "description": "TaxInterviewType enumerates valid Amazon tax interview types.",
          "fields": null
        },
        {
          "name": "TaxMismatchError",
          "kind": "ENUM",
          "description": "TaxMismatchError enumerates valid registration and tax interview field names for payout onboarding.",
          "fields": null
        },
        {
          "name": "Team",
          "kind": "OBJECT",
          "description": "Stream team details.",
          "fields": [
            {
              "name": "displayName"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "ThumbnailOEmbed",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "height"
            },
            {
              "name": "url"
            },
            {
              "name": "width"
            }
          ]
        },
        {
          "name": "Time",
          "kind": "SCALAR",
          "description": "RFC3339 timestamp.\nFor example \"2015-07-22T21:41:14Z\".",
          "fields": null
        },
        {
          "name": "TimeoutUserFromCommunityError",
          "kind": "ENUM",
          "description": "TimeoutUserFromCommunityError is the error code while timing out a user from a community.\nNOTE: Should have been named TimeoutUserFromCommunityErrorCode.",
          "fields": null
        },
        {
          "name": "TimeoutUserFromCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "TimeoutUserFromCommunityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "community"
            },
            {
              "name": "error"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "TimetableChildEvent",
          "kind": "UNION",
          "description": "TimetableChildEvent defines the types of sub-events that a TimetableEvent may contain.\nNOTE: Clients should be resilient to TimetableChildEvent including new types in the future.",
          "fields": null
        },
        {
          "name": "TimetableChildEventConnection",
          "kind": "OBJECT",
          "description": "Paginated list of sub-events that are part of a TimetableEvent.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "TimetableChildEventEdge",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "TimetableEvent",
          "kind": "OBJECT",
          "description": "TimetableEvent describes an event that comprises of a collection of closely related sub-events.\nTimetableEvent would be good at representing:\n  * A gaming event like \"Awesome Games Done Quick 2018\" which each run is its own piece of content that can\n    be represented by a SegmentEvent\n  * A conference like \"TwitchCon 2017\" where each panel is its own piece of content that can be represented\n    by a SegmentEvent.",
          "fields": [
            {
              "name": "channels"
            },
            {
              "name": "children"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "endAt"
            },
            {
              "name": "games"
            },
            {
              "name": "id"
            },
            {
              "name": "imageID"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "language"
            },
            {
              "name": "owner"
            },
            {
              "name": "self"
            },
            {
              "name": "startAt"
            },
            {
              "name": "stats"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "ToggleRitualsEnabledInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "ToggleRitualsEnabledPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "isEnabled"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "Tournament",
          "kind": "OBJECT",
          "description": "Tournament is an object that contains all information about a tournament\nmanaged within Bits for a specific event tied to cheering.\nNOTE: Should have been named CheeringTournament.",
          "fields": [
            {
              "name": "globalLeaderboard"
            },
            {
              "name": "id"
            },
            {
              "name": "progress"
            },
            {
              "name": "rewards"
            },
            {
              "name": "self"
            },
            {
              "name": "teamLeaderboard"
            },
            {
              "name": "teams"
            }
          ]
        },
        {
          "name": "TournamentInsiderRewards",
          "kind": "OBJECT",
          "description": "Contains all rewards information about the Insider rewards.",
          "fields": [
            {
              "name": "badges"
            },
            {
              "name": "heroSkins"
            },
            {
              "name": "inGameContent"
            }
          ]
        },
        {
          "name": "TournamentProgress",
          "kind": "OBJECT",
          "description": "Describes the amount of progress that has been made in a tournament, with corresponding milestones about said progress.",
          "fields": [
            {
              "name": "amount"
            },
            {
              "name": "milestones"
            }
          ]
        },
        {
          "name": "TournamentReward",
          "kind": "OBJECT",
          "description": "Type containing information about a Reward and claiming information.",
          "fields": [
            {
              "name": "canBeFulfilled"
            },
            {
              "name": "description"
            },
            {
              "name": "id"
            },
            {
              "name": "imageURL"
            },
            {
              "name": "isEntitled"
            },
            {
              "name": "name"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "TournamentRewards",
          "kind": "OBJECT",
          "description": "This type holds all information about rewards that are associated with a tournament. The struct parses out\nwhich rewards are Global, Team, and Individual, as well as if you're logged in that status if you can claim the reward.",
          "fields": [
            {
              "name": "global"
            },
            {
              "name": "individual"
            },
            {
              "name": "insider"
            },
            {
              "name": "team"
            }
          ]
        },
        {
          "name": "TournamentSelfEdge",
          "kind": "OBJECT",
          "description": "Tournament progress related to a user.",
          "fields": [
            {
              "name": "globalLeaderboardItem"
            },
            {
              "name": "progress"
            },
            {
              "name": "teams"
            }
          ]
        },
        {
          "name": "TournamentTeam",
          "kind": "OBJECT",
          "description": "Team is a construct that contains metadata about a team participating in the tournament,\nas well as the milestones associated with cheering for them.",
          "fields": [
            {
              "name": "division"
            },
            {
              "name": "id"
            },
            {
              "name": "logoURL"
            },
            {
              "name": "name"
            }
          ]
        },
        {
          "name": "TrueXAd",
          "kind": "INPUT_OBJECT",
          "description": "TrueXAd is descriptive information about an engagement that was show for bits.\nUsed as input on the redeem trueXAd mutation.",
          "fields": null
        },
        {
          "name": "UnbanUserFromChatRoomError",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "UnbanUserFromChatRoomErrorCode",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "UnbanUserFromChatRoomInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UnbanUserFromChatRoomPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "ban"
            },
            {
              "name": "error"
            }
          ]
        },
        {
          "name": "UnbanUserFromCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UnbanUserFromCommunityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "community"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UnblockUserInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UnblockUserPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "targetUser"
            }
          ]
        },
        {
          "name": "UnfollowCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UnfollowCommunityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "community"
            },
            {
              "name": "follow"
            }
          ]
        },
        {
          "name": "UnfollowDeprecatedEventPayload",
          "kind": "OBJECT",
          "description": "The result of an unfollowDeprecatedEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "UnfollowEventInput",
          "kind": "INPUT_OBJECT",
          "description": "The required input for an unfollowEvent mutation.",
          "fields": null
        },
        {
          "name": "UnfollowEventPayload",
          "kind": "OBJECT",
          "description": "The result of an unfollowEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "UnfollowGameInput",
          "kind": "INPUT_OBJECT",
          "description": "UnfollowGameInput contains just the game ID of the game to unfollow.",
          "fields": null
        },
        {
          "name": "UnfollowGamePayload",
          "kind": "OBJECT",
          "description": "UnfollowGamePayload is the response from unfollowing a game.",
          "fields": [
            {
              "name": "follow"
            },
            {
              "name": "game"
            }
          ]
        },
        {
          "name": "UnfollowUserInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UnfollowUserPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "follow"
            }
          ]
        },
        {
          "name": "UnfriendUserInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UnfriendUserPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UninstallExtensionInput",
          "kind": "INPUT_OBJECT",
          "description": "The required input for an uninstallExtension mutation.",
          "fields": null
        },
        {
          "name": "UninstallExtensionPayload",
          "kind": "OBJECT",
          "description": "The resulting payload of an uninstallExtension mutation.",
          "fields": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "UnlinkSSOInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UnlinkSSOPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "links"
            }
          ]
        },
        {
          "name": "UnmodUserError",
          "kind": "OBJECT",
          "description": "ModUserError contains details about a client error that occurred.",
          "fields": [
            {
              "name": "code"
            }
          ]
        },
        {
          "name": "UnmodUserErrorCode",
          "kind": "ENUM",
          "description": "UnmodUserErrorCode defines a client error that occurred while remove a moderator.",
          "fields": null
        },
        {
          "name": "UnmodUserInput",
          "kind": "INPUT_OBJECT",
          "description": "UnmodUserInput contains the parameters to remove a user as a moderator to a channel.",
          "fields": null
        },
        {
          "name": "UnmodUserPayload",
          "kind": "OBJECT",
          "description": "UnmodUserPayload is the response when remove a user as a moderator.",
          "fields": [
            {
              "name": "channel"
            },
            {
              "name": "error"
            },
            {
              "name": "target"
            }
          ]
        },
        {
          "name": "UnsubscribeEmailInput",
          "kind": "INPUT_OBJECT",
          "description": "Input to the unsubscribe mutation. One of \"channel\" or \"type\" fields must be provided.",
          "fields": null
        },
        {
          "name": "UnsubscribeEmailPayload",
          "kind": "OBJECT",
          "description": "Output from the unsubscribe mutation.",
          "fields": [
            {
              "name": "isSuccess"
            }
          ]
        },
        {
          "name": "UntimeoutUserFromCommunityInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UntimeoutUserFromCommunityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "community"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UpdateAllWhisperThreadsInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateAllWhisperThreadsPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "count"
            }
          ]
        },
        {
          "name": "UpdateAutoModPropertiesInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateAutoModPropertiesPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "autoModProperties"
            }
          ]
        },
        {
          "name": "UpdateBroadcastSettingsInput",
          "kind": "INPUT_OBJECT",
          "description": "The required input for a updateBroadcastSettings mutation.",
          "fields": null
        },
        {
          "name": "UpdateBroadcastSettingsPayload",
          "kind": "OBJECT",
          "description": "The result of a updateBroadcastSettings mutation.",
          "fields": [
            {
              "name": "broadcastSettings"
            }
          ]
        },
        {
          "name": "UpdateChatColorInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateChatColorPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UpdateChatSettingsInput",
          "kind": "INPUT_OBJECT",
          "description": "Possible chat settings modifiable for the channel specified via ChannelID.",
          "fields": null
        },
        {
          "name": "UpdateChatSettingsPayload",
          "kind": "OBJECT",
          "description": "Result of mutation is the updated ChatSettings object.",
          "fields": [
            {
              "name": "chatSettings"
            }
          ]
        },
        {
          "name": "UpdateCheerPartnerSettingsChatMessageInput",
          "kind": "INPUT_OBJECT",
          "description": "Partner settings related to chat messages with bits.",
          "fields": null
        },
        {
          "name": "UpdateCheerPartnerSettingsCustomPrefixInput",
          "kind": "INPUT_OBJECT",
          "description": "Partner settings related to the custom cheermote prefix.",
          "fields": null
        },
        {
          "name": "UpdateCheerPartnerSettingsInput",
          "kind": "INPUT_OBJECT",
          "description": "Mutation input for updating Bits partner channel settings.",
          "fields": null
        },
        {
          "name": "UpdateCheerPartnerSettingsLeaderboardInput",
          "kind": "INPUT_OBJECT",
          "description": "Partner settings related to the bits leaderboard.",
          "fields": null
        },
        {
          "name": "UpdateCheerPartnerSettingsPayload",
          "kind": "OBJECT",
          "description": "Result of mutation is the updated UserSettings object.",
          "fields": [
            {
              "name": "cheer"
            }
          ]
        },
        {
          "name": "UpdateCheerPartnerSettingsRecentCheerInput",
          "kind": "INPUT_OBJECT",
          "description": "Partner settings related to the recent cheer message.",
          "fields": null
        },
        {
          "name": "UpdateClipError",
          "kind": "OBJECT",
          "description": "UpdateClipError is an error associated with the updateClip mutation.",
          "fields": [
            {
              "name": "message"
            }
          ]
        },
        {
          "name": "UpdateClipInput",
          "kind": "INPUT_OBJECT",
          "description": "UpdateClipInput updates the title of the clip with the provided slug.",
          "fields": null
        },
        {
          "name": "UpdateClipPayload",
          "kind": "OBJECT",
          "description": "UpdateClipPayload returns the updated clip.",
          "fields": [
            {
              "name": "clip"
            },
            {
              "name": "error"
            }
          ]
        },
        {
          "name": "UpdateClipViewCountInput",
          "kind": "INPUT_OBJECT",
          "description": "UpdateClipViewCountInput increments the viewcount of the provided slug.",
          "fields": null
        },
        {
          "name": "UpdateClipViewCountPayload",
          "kind": "OBJECT",
          "description": "UpdateClipViewCount returns the clip that was updated.",
          "fields": [
            {
              "name": "clip"
            }
          ]
        },
        {
          "name": "UpdateCollectionInput",
          "kind": "INPUT_OBJECT",
          "description": "UpdateCollectionInput accepts a collection ID and parameters to update a collection.",
          "fields": null
        },
        {
          "name": "UpdateCollectionPayload",
          "kind": "OBJECT",
          "description": "UpdateCollectionPayload resolves the updated collection.",
          "fields": [
            {
              "name": "collection"
            }
          ]
        },
        {
          "name": "UpdateCollectionThumbnailInput",
          "kind": "INPUT_OBJECT",
          "description": "UpdateCollectionThumbnailInput accepts a item ID and item Type for the new collection's thumbnail.",
          "fields": null
        },
        {
          "name": "UpdateEventBroadcastNotificationsInput",
          "kind": "INPUT_OBJECT",
          "description": "Input for mutation to modify a user's settings about notifications for an event broadcast.",
          "fields": null
        },
        {
          "name": "UpdateEventBroadcastNotificationsPayload",
          "kind": "OBJECT",
          "description": "Response payload for the mutation to follow an event broadcast.",
          "fields": [
            {
              "name": "eventBroadcast"
            }
          ]
        },
        {
          "name": "UpdateIsSharingActivityInput",
          "kind": "INPUT_OBJECT",
          "description": "Updates the user's activity sharing setting. This must only be sent in response to a direct action by the user\nintended to change the setting.",
          "fields": null
        },
        {
          "name": "UpdateIsSharingActivityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UpdateOnboardingSkippedChannelsInput",
          "kind": "INPUT_OBJECT",
          "description": "Used for mutating onboarding status.",
          "fields": null
        },
        {
          "name": "UpdateOnboardingSkippedChannelsPayload",
          "kind": "OBJECT",
          "description": "Returned after onboarding state is mutated.",
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UpdatePanelInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdatePanelPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "panel"
            }
          ]
        },
        {
          "name": "UpdatePremiereEventInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs to the updatePremiereEvent mutation.",
          "fields": null
        },
        {
          "name": "UpdatePremiereEventPayload",
          "kind": "OBJECT",
          "description": "Output from the updatePremiereEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "UpdatePrimeSettingsInput",
          "kind": "INPUT_OBJECT",
          "description": "UpdatePrimeSettingsInput contains boolean for setting the users preference on chat notifications,\nand the users preference on the emoticon set name to be selected.",
          "fields": null
        },
        {
          "name": "UpdatePrimeSettingsPayload",
          "kind": "OBJECT",
          "description": "Data that was mutated.",
          "fields": [
            {
              "name": "primeSettings"
            }
          ]
        },
        {
          "name": "UpdateRoomError",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "code"
            },
            {
              "name": "maxLength"
            },
            {
              "name": "minLength"
            }
          ]
        },
        {
          "name": "UpdateRoomErrorCode",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateRoomInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateRoomModesError",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "code"
            },
            {
              "name": "maximumSlowModeDurationSeconds"
            },
            {
              "name": "minimumSlowModeDurationSeconds"
            }
          ]
        },
        {
          "name": "UpdateRoomModesErrorCode",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateRoomModesInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateRoomModesPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "room"
            }
          ]
        },
        {
          "name": "UpdateRoomPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "error"
            },
            {
              "name": "room"
            }
          ]
        },
        {
          "name": "UpdateRoomViewInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateRoomViewPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "roomView"
            }
          ]
        },
        {
          "name": "UpdateSegmentEventInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs to the updateSegmentEvent mutation.",
          "fields": null
        },
        {
          "name": "UpdateSegmentEventPayload",
          "kind": "OBJECT",
          "description": "Output from the updateSegmentEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "UpdateSingleEventInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs to the updateSingleEvent mutation.",
          "fields": null
        },
        {
          "name": "UpdateSingleEventPayload",
          "kind": "OBJECT",
          "description": "Output from the updateSingleEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "UpdateSubscriptionProductInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs to the updateSubscriptionProduct mutation.",
          "fields": null
        },
        {
          "name": "UpdateSubscriptionProductPayload",
          "kind": "OBJECT",
          "description": "Output from the updateSubscriptionProduct mutation.",
          "fields": [
            {
              "name": "product"
            },
            {
              "name": "targetUser"
            }
          ]
        },
        {
          "name": "UpdateTimetableEventInput",
          "kind": "INPUT_OBJECT",
          "description": "Inputs to the updateTimetableEvent mutation.",
          "fields": null
        },
        {
          "name": "UpdateTimetableEventPayload",
          "kind": "OBJECT",
          "description": "Output from the updateTimetableEvent mutation.",
          "fields": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "UpdateUserDirectoryHiddenInput",
          "kind": "INPUT_OBJECT",
          "description": "The required input for a updateUserDirectoryHidden mutation.",
          "fields": null
        },
        {
          "name": "UpdateUserDirectoryHiddenPayload",
          "kind": "OBJECT",
          "description": "The result of a updateUserDirectoryHidden mutation.",
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UpdateUserSubscriptionSettingsInput",
          "kind": "INPUT_OBJECT",
          "description": "UpdateUserSubscriptionSettingsInput updates the users subscription settings.",
          "fields": null
        },
        {
          "name": "UpdateUserSubscriptionSettingsPayload",
          "kind": "OBJECT",
          "description": "UpdateUserSubscriptionGiftSettingsPayload returns the user's current gift settings.",
          "fields": [
            {
              "name": "subscriptionSettings"
            }
          ]
        },
        {
          "name": "UpdateVideoCommentInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateVideoCommentPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "comment"
            }
          ]
        },
        {
          "name": "UpdateVisibilityInput",
          "kind": "INPUT_OBJECT",
          "description": "The change that will be applied to the user's visibility. See VisibilityInput for details on the effects of each\nvalue.",
          "fields": null
        },
        {
          "name": "UpdateVisibilityPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "UpdateWhisperThreadInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateWhisperThreadPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "thread"
            }
          ]
        },
        {
          "name": "User",
          "kind": "OBJECT",
          "description": "Twitch user.",
          "fields": [
            {
              "name": "accountConnections"
            },
            {
              "name": "activity"
            },
            {
              "name": "amazon"
            },
            {
              "name": "amazonMarketplaces"
            },
            {
              "name": "autoModProperties"
            },
            {
              "name": "autohostChannels"
            },
            {
              "name": "autohostSettings"
            },
            {
              "name": "availability"
            },
            {
              "name": "availableBadges"
            },
            {
              "name": "bannedUsers"
            },
            {
              "name": "bannerImageURL"
            },
            {
              "name": "bitsBalance"
            },
            {
              "name": "bitsOffers"
            },
            {
              "name": "blizzardAccount"
            },
            {
              "name": "blockedTerms"
            },
            {
              "name": "blockedUsers"
            },
            {
              "name": "bounties"
            },
            {
              "name": "bountyBoardSettings"
            },
            {
              "name": "broadcastBadges"
            },
            {
              "name": "broadcastSettings"
            },
            {
              "name": "channelFeed"
            },
            {
              "name": "channelRooms"
            },
            {
              "name": "chatColor"
            },
            {
              "name": "chatSettings"
            },
            {
              "name": "cheer"
            },
            {
              "name": "clientAuthorizations"
            },
            {
              "name": "clips"
            },
            {
              "name": "collections"
            },
            {
              "name": "crates"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "description"
            },
            {
              "name": "directories"
            },
            {
              "name": "displayBadges"
            },
            {
              "name": "displayName"
            },
            {
              "name": "email"
            },
            {
              "name": "emoteSets"
            },
            {
              "name": "eventLeaves"
            },
            {
              "name": "events"
            },
            {
              "name": "featureFlags"
            },
            {
              "name": "followedCommunities"
            },
            {
              "name": "followedEvents"
            },
            {
              "name": "followedGames"
            },
            {
              "name": "followedVideos"
            },
            {
              "name": "followers"
            },
            {
              "name": "follows"
            },
            {
              "name": "friends"
            },
            {
              "name": "hasPrime"
            },
            {
              "name": "hasTurbo"
            },
            {
              "name": "hosting"
            },
            {
              "name": "id"
            },
            {
              "name": "idSHA1"
            },
            {
              "name": "incomingFriendRequests"
            },
            {
              "name": "installedExtensions"
            },
            {
              "name": "inventory"
            },
            {
              "name": "isConnectedToTwitter"
            },
            {
              "name": "isEmailVerified"
            },
            {
              "name": "lastBroadcast"
            },
            {
              "name": "lastStatusChangeAt"
            },
            {
              "name": "liveEvent"
            },
            {
              "name": "login"
            },
            {
              "name": "managedEventCollections"
            },
            {
              "name": "managedEventLeaves"
            },
            {
              "name": "maxAllowedChannelRooms"
            },
            {
              "name": "mods"
            },
            {
              "name": "notificationSettings"
            },
            {
              "name": "notifications"
            },
            {
              "name": "offlineImageURL"
            },
            {
              "name": "onboarding"
            },
            {
              "name": "panels"
            },
            {
              "name": "payPalBillingAgreement"
            },
            {
              "name": "payPalBillingAgreementURL"
            },
            {
              "name": "paymentMethodConfigs"
            },
            {
              "name": "paymentMethods"
            },
            {
              "name": "paymentTransactions"
            },
            {
              "name": "payoutInvite"
            },
            {
              "name": "payoutPlans"
            },
            {
              "name": "permittedTerms"
            },
            {
              "name": "primaryTeam"
            },
            {
              "name": "primeSettings"
            },
            {
              "name": "profileImageURL"
            },
            {
              "name": "profileViewCount"
            },
            {
              "name": "programAgreement"
            },
            {
              "name": "pulseFeed"
            },
            {
              "name": "recommendations"
            },
            {
              "name": "residence"
            },
            {
              "name": "roles"
            },
            {
              "name": "searchVideos"
            },
            {
              "name": "selectedBadge"
            },
            {
              "name": "self"
            },
            {
              "name": "settings"
            },
            {
              "name": "ssoLinks"
            },
            {
              "name": "stream"
            },
            {
              "name": "subscribedChannels"
            },
            {
              "name": "subscriptionBenefits"
            },
            {
              "name": "subscriptionProducts"
            },
            {
              "name": "subscriptionSettings"
            },
            {
              "name": "suggestedFeeds"
            },
            {
              "name": "tournament"
            },
            {
              "name": "twitch"
            },
            {
              "name": "unreadWhisperMessagesCount"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "videos"
            },
            {
              "name": "viewedVideos"
            },
            {
              "name": "whisperThreads"
            }
          ]
        },
        {
          "name": "UserAmazonConnection",
          "kind": "OBJECT",
          "description": "The relationship between the user and Amazon.",
          "fields": [
            {
              "name": "associatesStore"
            }
          ]
        },
        {
          "name": "UserClipsInput",
          "kind": "INPUT_OBJECT",
          "description": "Filtering criteria for paginated user clips results.",
          "fields": null
        },
        {
          "name": "UserConnection",
          "kind": "OBJECT",
          "description": "Paginated list of Users, where the relationship between the source type and the User is\ngeneric enough that no information needs to be encoded on the edge.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "UserDirectoryConnection",
          "kind": "OBJECT",
          "description": "The connection between a user and the directories they have selected to broadcast in.",
          "fields": [
            {
              "name": "nodes"
            }
          ]
        },
        {
          "name": "UserDropAwardConnection",
          "kind": "OBJECT",
          "description": "A list of Drops awarded to the user.",
          "fields": [
            {
              "name": "nodes"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "UserEdge",
          "kind": "OBJECT",
          "description": "Generic edge between some type and a User, where there is no information that needs to\nto be encoded on the edge.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "UserResidence",
          "kind": "OBJECT",
          "description": "User's residence.",
          "fields": [
            {
              "name": "countryCode"
            },
            {
              "name": "postalCode"
            }
          ]
        },
        {
          "name": "UserRoles",
          "kind": "OBJECT",
          "description": "Groups site-wide user roles together.",
          "fields": [
            {
              "name": "isAffiliate"
            },
            {
              "name": "isExtensionsApprover"
            },
            {
              "name": "isExtensionsDeveloper"
            },
            {
              "name": "isGlobalMod"
            },
            {
              "name": "isPartner"
            },
            {
              "name": "isSiteAdmin"
            },
            {
              "name": "isStaff"
            }
          ]
        },
        {
          "name": "UserSelfBitsBadge",
          "kind": "OBJECT",
          "description": "UserSelfBitsBadge contains the current user's badge tier in a channel and progress toward the next tier.\nNOTE: should probably have been named CurrentUserBitsBadge.",
          "fields": [
            {
              "name": "current"
            },
            {
              "name": "id"
            },
            {
              "name": "next"
            },
            {
              "name": "nextBits"
            },
            {
              "name": "progress"
            },
            {
              "name": "totalBits"
            }
          ]
        },
        {
          "name": "UserSelfConnection",
          "kind": "OBJECT",
          "description": "Subjective data on another User (user/channel) for the current user.",
          "fields": [
            {
              "name": "availableBadges"
            },
            {
              "name": "bitsBadge"
            },
            {
              "name": "bitsLeaderboardItem"
            },
            {
              "name": "bitsLeaderboardPosition"
            },
            {
              "name": "canGift"
            },
            {
              "name": "canPrimeSubscribe"
            },
            {
              "name": "displayBadges"
            },
            {
              "name": "follower"
            },
            {
              "name": "isChannelMember"
            },
            {
              "name": "isEditor"
            },
            {
              "name": "isModerator"
            },
            {
              "name": "purchaseTokens"
            },
            {
              "name": "resubNotification"
            },
            {
              "name": "ritualTokens"
            },
            {
              "name": "selectedBadge"
            },
            {
              "name": "subscriptionBenefit"
            }
          ]
        },
        {
          "name": "UserSettings",
          "kind": "OBJECT",
          "description": "Groups site-wide user settings together.",
          "fields": [
            {
              "name": "channelFeedEnabled"
            },
            {
              "name": "cheer"
            },
            {
              "name": "hasTwoFactorEnabled"
            },
            {
              "name": "isAmazonRetailRevShareEnabled"
            },
            {
              "name": "isCommerceRevShareEnabled"
            },
            {
              "name": "isDirectoryHidden"
            },
            {
              "name": "isRitualsEnabled"
            },
            {
              "name": "isSharingActivity"
            },
            {
              "name": "preferredLanguageTag"
            },
            {
              "name": "visibility"
            }
          ]
        },
        {
          "name": "UserSubscriptionSettings",
          "kind": "OBJECT",
          "description": "User preferences related to subscriptions and subscription gifts.\nie. Can I receive gifts to all channels or only channels I follow?",
          "fields": [
            {
              "name": "giftsToFollowedChannelsOnly"
            }
          ]
        },
        {
          "name": "UserTwitchConnection",
          "kind": "OBJECT",
          "description": "The relationship between the user and Twitch.",
          "fields": [
            {
              "name": "commerceAmendment"
            }
          ]
        },
        {
          "name": "Video",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "animatedPreviewURL"
            },
            {
              "name": "broadcastType"
            },
            {
              "name": "comments"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "creator"
            },
            {
              "name": "deletedAt"
            },
            {
              "name": "description"
            },
            {
              "name": "game"
            },
            {
              "name": "id"
            },
            {
              "name": "isDeleted"
            },
            {
              "name": "language"
            },
            {
              "name": "lengthSeconds"
            },
            {
              "name": "offsetSeconds"
            },
            {
              "name": "owner"
            },
            {
              "name": "previewThumbnailURL"
            },
            {
              "name": "publishedAt"
            },
            {
              "name": "reactions"
            },
            {
              "name": "recordedAt"
            },
            {
              "name": "scope"
            },
            {
              "name": "self"
            },
            {
              "name": "status"
            },
            {
              "name": "tags"
            },
            {
              "name": "thumbnailURLs"
            },
            {
              "name": "title"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "viewCount"
            },
            {
              "name": "viewableAt"
            }
          ]
        },
        {
          "name": "VideoComment",
          "kind": "OBJECT",
          "description": "Comment on a video.",
          "fields": [
            {
              "name": "commenter"
            },
            {
              "name": "contentOffsetSeconds"
            },
            {
              "name": "createdAt"
            },
            {
              "name": "id"
            },
            {
              "name": "message"
            },
            {
              "name": "replies"
            },
            {
              "name": "state"
            },
            {
              "name": "updatedAt"
            },
            {
              "name": "video"
            }
          ]
        },
        {
          "name": "VideoCommentConnection",
          "kind": "OBJECT",
          "description": "Paginated list of comments.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "VideoCommentEdge",
          "kind": "OBJECT",
          "description": "Video comment edge with cursor and the comment node.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "VideoCommentMessage",
          "kind": "OBJECT",
          "description": "Represents the message of a comment.",
          "fields": [
            {
              "name": "fragments"
            },
            {
              "name": "userBadges"
            },
            {
              "name": "userColor"
            }
          ]
        },
        {
          "name": "VideoCommentMessageFragment",
          "kind": "OBJECT",
          "description": "Represents a part of the message body with meta info.",
          "fields": [
            {
              "name": "emote"
            },
            {
              "name": "mention"
            },
            {
              "name": "text"
            }
          ]
        },
        {
          "name": "VideoCommentState",
          "kind": "ENUM",
          "description": "Represents the state of a video comment.",
          "fields": null
        },
        {
          "name": "VideoConnection",
          "kind": "OBJECT",
          "description": "A paginated list of videos, and its metadata.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "VideoConnectionSearchParams",
          "kind": "INPUT_OBJECT",
          "description": "A Video Connection Search input to set params to include search term.",
          "fields": null
        },
        {
          "name": "VideoEdge",
          "kind": "OBJECT",
          "description": "An element in a paginated list of videos, and its metadata.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "VideoOEmbed",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "authorName"
            },
            {
              "name": "authorURL"
            },
            {
              "name": "cacheAge"
            },
            {
              "name": "height"
            },
            {
              "name": "html"
            },
            {
              "name": "inputURL"
            },
            {
              "name": "providerName"
            },
            {
              "name": "providerURL"
            },
            {
              "name": "thumbnail"
            },
            {
              "name": "title"
            },
            {
              "name": "type"
            },
            {
              "name": "version"
            },
            {
              "name": "width"
            }
          ]
        },
        {
          "name": "VideoOptions",
          "kind": "INPUT_OBJECT",
          "description": "Options to include private videos.",
          "fields": null
        },
        {
          "name": "VideoOverlayActivationInput",
          "kind": "INPUT_OBJECT",
          "description": "The required configuration to activate a video overlay extension.",
          "fields": null
        },
        {
          "name": "VideoOverlayView",
          "kind": "OBJECT",
          "description": "VideoOverlayView holds the view configuration of an extension if the videoOverlay anchor is supported.",
          "fields": [
            {
              "name": "viewerURL"
            }
          ]
        },
        {
          "name": "VideoPrivacyScope",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "VideoSelfEdge",
          "kind": "OBJECT",
          "description": "The relationship between the authenticated user and a video.",
          "fields": [
            {
              "name": "viewingHistory"
            }
          ]
        },
        {
          "name": "VideoSort",
          "kind": "ENUM",
          "description": "Possible sort orders for lists of videos.",
          "fields": null
        },
        {
          "name": "VideoStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "VideoViewingHistory",
          "kind": "OBJECT",
          "description": "User's viewing history against a video. All fields are null if no viewing history is available.",
          "fields": [
            {
              "name": "position"
            },
            {
              "name": "updatedAt"
            }
          ]
        },
        {
          "name": "ViewedNotificationsPayload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "ViewedVideosConnection",
          "kind": "OBJECT",
          "description": "A paginated list of viewed videos, their histories, and metadata.",
          "fields": [
            {
              "name": "edges"
            }
          ]
        },
        {
          "name": "ViewedVideosEdge",
          "kind": "OBJECT",
          "description": "An element in a paginated list of viewing histories, and its metadata.",
          "fields": [
            {
              "name": "history"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "Visibility",
          "kind": "ENUM",
          "description": "The user's shared availability while online.\nA value of ONLINE (typically called invisibility) additionally means that the user's activity will not be shared\nregardless of the isSharingActivity setting.\nNOTE: Should have been named UserOnlineVisibility.",
          "fields": null
        },
        {
          "name": "VisibilityInput",
          "kind": "ENUM",
          "description": "A visibility type for the user.",
          "fields": null
        },
        {
          "name": "Watching",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "type"
            },
            {
              "name": "user"
            }
          ]
        },
        {
          "name": "WhisperMessage",
          "kind": "OBJECT",
          "description": "A message sent in a whisper thread.",
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "deletedAt"
            },
            {
              "name": "editedAt"
            },
            {
              "name": "from"
            },
            {
              "name": "id"
            },
            {
              "name": "nonce"
            },
            {
              "name": "sentAt"
            },
            {
              "name": "thread"
            }
          ]
        },
        {
          "name": "WhisperMessageConnection",
          "kind": "OBJECT",
          "description": "Paginated list of messages in a thread.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            }
          ]
        },
        {
          "name": "WhisperMessageEdge",
          "kind": "OBJECT",
          "description": "Element in a list of messages.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "WhisperSpamInfo",
          "kind": "OBJECT",
          "description": "Spam classification data for a message.",
          "fields": [
            {
              "name": "lastMarkedNotSpamAt"
            },
            {
              "name": "likelihood"
            }
          ]
        },
        {
          "name": "WhisperSpamLikelihood",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "WhisperThread",
          "kind": "OBJECT",
          "description": "A conversation between two users.",
          "fields": [
            {
              "name": "id"
            },
            {
              "name": "isArchived"
            },
            {
              "name": "isMuted"
            },
            {
              "name": "messages"
            },
            {
              "name": "participants"
            },
            {
              "name": "spamInfo"
            },
            {
              "name": "unreadMessagesCount"
            },
            {
              "name": "userLastMessageRead"
            }
          ]
        },
        {
          "name": "WhisperThreadConnection",
          "kind": "OBJECT",
          "description": "Paginated list of whisper threads.",
          "fields": [
            {
              "name": "edges"
            },
            {
              "name": "pageInfo"
            },
            {
              "name": "totalCount"
            }
          ]
        },
        {
          "name": "WhisperThreadEdge",
          "kind": "OBJECT",
          "description": "Element in a list of whisper threads.",
          "fields": [
            {
              "name": "cursor"
            },
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "Xbox",
          "kind": "OBJECT",
          "description": "Stream metadata for Xbox.",
          "fields": [
            {
              "name": "gamertag"
            },
            {
              "name": "titleID"
            }
          ]
        },
        {
          "name": "XsollaConfigs",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "iframeURL"
            }
          ]
        },
        {
          "name": "ZuoraConfigs",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "externalAccountID"
            },
            {
              "name": "hostedPageID"
            },
            {
              "name": "hostedPageURL"
            },
            {
              "name": "publicKey"
            },
            {
              "name": "signature"
            },
            {
              "name": "tenantID"
            },
            {
              "name": "token"
            }
          ]
        },
        {
          "name": "__Directive",
          "kind": "OBJECT",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior\nin ways field arguments will not suffice, such as conditionally including or\nskipping a field. Directives provide this by describing additional information\nto the executor.",
          "fields": [
            {
              "name": "name"
            },
            {
              "name": "description"
            },
            {
              "name": "locations"
            },
            {
              "name": "args"
            }
          ]
        },
        {
          "name": "__DirectiveLocation",
          "kind": "ENUM",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a\n__DirectiveLocation describes one such possible adjacencies.",
          "fields": null
        },
        {
          "name": "__EnumValue",
          "kind": "OBJECT",
          "description": "One possible value for a given Enum. Enum values are unique values, not a\nplaceholder for a string or numeric value. However an Enum value is returned in\na JSON response as a string.",
          "fields": [
            {
              "name": "name"
            },
            {
              "name": "description"
            },
            {
              "name": "isDeprecated"
            },
            {
              "name": "deprecationReason"
            }
          ]
        },
        {
          "name": "__Field",
          "kind": "OBJECT",
          "description": "Object and Interface types are described by a list of Fields, each of which has\na name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "name"
            },
            {
              "name": "description"
            },
            {
              "name": "args"
            },
            {
              "name": "type"
            },
            {
              "name": "isDeprecated"
            },
            {
              "name": "deprecationReason"
            }
          ]
        },
        {
          "name": "__InputValue",
          "kind": "OBJECT",
          "description": "Arguments provided to Fields or Directives and the input fields of an\nInputObject are represented as Input Values which describe their type and\noptionally a default value.",
          "fields": [
            {
              "name": "name"
            },
            {
              "name": "description"
            },
            {
              "name": "type"
            },
            {
              "name": "defaultValue"
            }
          ]
        },
        {
          "name": "__Schema",
          "kind": "OBJECT",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all\navailable types and directives on the server, as well as the entry points for\nquery, mutation, and subscription operations.",
          "fields": [
            {
              "name": "types"
            },
            {
              "name": "queryType"
            },
            {
              "name": "mutationType"
            },
            {
              "name": "subscriptionType"
            },
            {
              "name": "directives"
            }
          ]
        },
        {
          "name": "__Type",
          "kind": "OBJECT",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of\ntypes in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that\ntype. Scalar types provide no information beyond a name and description, while\nEnum types provide their values. Object and Interface types provide the fields\nthey describe. Abstract types, Union and Interface, provide the Object types\npossible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "kind"
            },
            {
              "name": "name"
            },
            {
              "name": "description"
            },
            {
              "name": "fields"
            },
            {
              "name": "interfaces"
            },
            {
              "name": "possibleTypes"
            },
            {
              "name": "enumValues"
            },
            {
              "name": "inputFields"
            },
            {
              "name": "ofType"
            }
          ]
        },
        {
          "name": "__TypeKind",
          "kind": "ENUM",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null
        }
      ]
    }
  },
  "extensions": {
    "durationMilliseconds": 10
  }
}
